{"version":3,"sources":["logo.svg","providers/Provider.tsx","components/SideMenu.tsx","components/Header.tsx","components/Footer.tsx","components/organisms/ModalTest.tsx","components/Result.tsx","components/atoms/TopButton.tsx","assets/main.jpg","components/animations/MainTitle.tsx","components/MainImage.tsx","components/Search.tsx","components/LoginInputItem.tsx","components/Login.tsx","components/organisms/BookCalendar.jsx","components/organisms/index/EditThoughtsModal.tsx","components/organisms/TotalLabelItem.tsx","components/organisms/BookChartItem.tsx","components/organisms/BookPaginateItem.tsx","components/IndexItem.tsx","components/organisms/index/DeleteThoughtsDialog.tsx","components/Index.tsx","components/organisms/collections/CountupItem.tsx","components/organisms/collections/CreateThoughtsModal.tsx","components/organisms/collections/FinishDetail.tsx","components/Collection.tsx","router/Router.tsx","App.js","reportWebVitals.js","index.tsx"],"names":["MainContext","createContext","MainProvider","props","railsUrl","process","children","useState","data","setData","text","setText","name","setName","password","setPassword","token","document","cookie","split","find","row","startsWith","configAxios","headers","Authorization","booksIndex","setBooksIndex","loginFlag","setLoginFlag","history","useHistory","userId","setUserId","googleData","setGoogleData","tsutayaData","setTsutayaData","kinoData","setKinoData","title","author","imageUrl","itemUrl","targetItem","setTargetItem","Date","getTime","setTime","targetFlag","setTargetFlag","idea","setIdea","kinoArrangeData","setKinoArrangeData","toast","useToast","showToast","message","position","duration","render","color","p","className","countIsOk","SetCountIsOk","bookCollections","setBookCollections","createIsOk","SetCreateIsOk","editIsOk","SetEditIsOk","Provider","value","onClickTop","window","scrollTo","top","behavior","targetFlagChangeReset","onClickPostRails","dateTimeFormat","date","m","getMonth","slice","d","getDate","h","getHours","mi","getMinutes","s","getSeconds","console","log","getFullYear","axios","post","formData","FormData","params","booktitle","bookimage","thoughts","page","readingtime","userid","Object","entries","forEach","key","append","formDataCreate","then","res","catch","error","checkAuth","push","onClickGetIndexRails","get","SideMenu","setMenuFlag","onClickLogOut","onClickCloseMenu","to","onClick","Header","useContext","menuFlag","href","fill","stroke","viewBox","xmlns","Footer","styled","header","button","h2","footer","ModalTest","indexFlag","isOpen","onClose","useForm","criteriaMode","shouldFocusError","register","handleSubmit","errors","formState","reset","motionPreset","alt","src","onSubmit","htmlFor","placeholder","types","required","type","maxLength","pattern","Result","apiName","useDisclosure","onOpen","onClickTargetItem","e","Target","interceptors","request","use","config","response","length","style","marginTop","map","item","index","target","rel","SContainer","div","li","img","input","TopButton","MainTitle","id","MainImage","mainImage","left","transform","Search","appId","setPage","onClickRakutenAPINextPage","format","keyword","applicationId","newArray","dataArrangeRakutenAPI","Items","items","oneItem","Item","largeImageUrl","dataArrangeGoogleAPI","volumeInfo","authors","infoLink","imageLinks","thumbnail","onClickGetRakutenAPI","onClickGetGoogleAPI","q","maxResults","startIndex","googlePage","setGooglePage","onClickGoogleAPINextPage","onClickGetGoTsutayaAPINextPage","kinoPage","setKinoPage","onClickGetGoKinoAPINextPage","Math","floor","getTopPosition","scrollingElement","onscroll","want","getElementById","scrollTop","classList","add","remove","styleJSX","marginBottom","onClickGetGoKinoAPI","onClickGetGoTsutayaAPI","tabStatus","setTabStatus","useEffect","i","arr","kinoArrange","io","IntersectionObserver","entris","observer","entry","isIntersecting","els","querySelectorAll","el","observe","label","closeDelay","placement","onChange","LoginInputItem","memo","acitonTitle","actionComment","onClickAciton","username","bg","minLength","Lonin","signupFlag","setSignupFlag","onClickCangeSignupFlag","BookCalendar","indexDateArr","locale","calendarType","tileContent","view","undefined","a","EditThoughtsModal","thought","React","useRef","setValue","onClickEditPostRails","patch","rows","TotalLabelItem","getPage","sum","today","Number","width","end","BookChartItem","totalData","setTotalData","calChartData","useCallback","dateArr","pageArr","sort","b","td","labels","datasets","backgroundColor","borderColor","hoverBackgroundColor","borderWidth","height","BookPaginateItem","viewPages","setViewPages","wantPage","indexArray","onPageChange","selected","sp","startpage","endpage","pageCount","pageRangeDisplayed","marginPagesDisplayed","previousLabel","nextLabel","containerClassName","pageClassName","previousLinkClassName","nextLinkClassName","activeClassName","IndexItem","onClickThoughtCreate","onClickTargetDelete","DeleteThoughtsDialog","deleteId","daialogFlag","setDaialogFlag","cancelRef","leastDestructiveRef","isCentered","ref","colorScheme","ml","delete","onClickDeleteRails","Index","editThought","SetEditThought","setDeleteId","fileDownload","require","calendarDate","arrangDate","setIndexDateArr","querySelector","responseType","blob","Blob","t","CountupItem","finishId","onClickGetCollection","onClickFinishCountUp","CreateThoughtsModal","collection","FinishDetail","collerctionBookid","finishcount","count","finishdate","createdat","updatedat","bookid","finishLogs","SetFinishLogs","f","Collection","setFinishId","bookurl","createCollection","SetCreateCollection","c","onClickFinished","defaultIndex","allowMultiple","flex","textAlign","pb","Router","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5b45c93d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Box, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { createContext, Dispatch, ReactNode, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router';\n// import { API_KEY } from '../api/API_KEY';\n\n// interface MainContext{\n//   name?: string,\n//   setName?: any,\n//   password:\n// }\n\nexport const MainContext = createContext<any>({});\n\ninterface Props{\n  children: ReactNode\n}\n\nexport const MainProvider = (props: Props) => {\n\n  const  railsUrl  = process.env.REACT_APP_RAILS_URL //ここをENVにしたい！！\n  // console.log(railsUrl)\n  const { children } = props;\n\n  const [data, setData] = useState([]);\n  const [text, setText] = useState<string>();\n\n  const [name, setName] = useState<string>()\n  const [password, setPassword] = useState<string>()\n\n  const token = ():string => {\n    if (document.cookie.split('; ').find(row => row.startsWith('token'))){\n   return(document.cookie\n    .split('; ')\n    .find(row => row.startsWith('token'))!\n    .split('=')[1])\n  } else {\n    return \"\"\n  }\n  }\n\n//  const tokenExist = () => {\n//   document.cookie.split('; ').find(row => row.startsWith('token'))\n//  }\n\n\n\n  const configAxios = {headers: {\n    Authorization: `Bearer ${token()}`,\n  }}\n  // const configAxios = {withCredentials: true}\n  // const configAxios = {headers: { 'X-Requested-With': 'XMLHttpRequest'}, withCredentials: true}\n\n  const [ booksIndex, setBooksIndex ] = useState<Item[]>([])\n  interface Item{\n    id: number,\n    date: string,\n    booktitle: string,\n    author: string,\n    bookimage: string,\n    thoughts: any,\n    // itemUrl: string,\n    // largeImageUrl: string\n  }\n  const [ loginFlag, setLoginFlag ] = useState<boolean>(false)\n\n  const onClickTop = (): void => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    })\n  }\n  const history = useHistory()\n  const checkAuth = () => {\n    !loginFlag && history.push(\"/\")\n  }\n\n  const [userId, setUserId] = useState(-1)\n\n  const [googleData, setGoogleData] = useState([]);\n\n  const [tsutayaData, setTsutayaData] = useState([])\n  const [kinoData, setKinoData] = useState([])\n\n  interface TargetItem {\n    title: string;\n    author: string;\n    imageUrl: string;\n    itemUrl: string;\n  }\n  const [targetItem, setTargetItem] = useState<TargetItem>({title: \"\", author: \"\", imageUrl: \"\",itemUrl: \"\"}) //ここでtypeエイリアスかな？？\n  const [time, setTime] = useState<number>(new Date().getTime()) // .toLocaleString(\"en\",\"Asia/Tokyo\") したいなああ\n  const [targetFlag, setTargetFlag] = useState<boolean>(false)\n\n  interface PostProps {\n    thoughts: string\n    date: number,\n    page: number,\n    readingtime: number,\n  }\n  // const onClickPostRails = (props: PostProps) => {\n  //   if(loginFlag){\n  //     const arrngeDate = new Date(props.date).getTime()\n  //     const trans: number = arrngeDate / 1000\n  //     console.log(props.thoughts)\n  //     axios.post(`${railsUrl}/books`,{\n  //       booktitle: targetItem.title,\n  //       author: targetItem.author,\n  //       bookimage: targetItem.imageUrl,\n  //       thoughts: props.thoughts,\n  //       // date: props.date,\n  //       // thoughts: idea,\n  //       date: trans,\n  //       user_id: userId\n  //     },configAxios).then((res) => {\n  //       setTargetFlag(() => false);\n  //       setTargetItem(() => ({title: \"\", author: \"\", imageUrl: \"\",itemUrl: \"\"}))\n  //       setIdea(() => (\"\"))\n\n  //     })\n  //     .catch(error => {\n  //     });\n\n  //   } else {\n  //     showToast(\"ログインしてください\")\n\n  //   }\n\n  // }\n  const onClickPostRails = (props: PostProps): string => {\n\n    const dateTimeFormat = (props: number) =>  {\n      const date = new Date(props) // まあ、ここをinputで受け取れるようにする\n      // console.log(`${date.getFullYear()}${date.getMonth()}${date.getDate()}${date.getHours()}${date.getMinutes()}${date.getSeconds()}`)\n      // console.log(`${date.getFullYear()}-0${date.getMonth()}-${date.getDate()} 0${date.getHours()}:0${date.getMinutes()}:${date.getSeconds()}`)\n\n      const m = (`00${date.getMonth()+1}`).slice(-2)\n      const d = (`00${date.getDate()}`).slice(-2)\n      const h = (`00${date.getHours()}`).slice(-2)\n      const mi = (`00${date.getMinutes()}`).slice(-2)\n      const s = (`00${date.getSeconds()}`).slice(-2)\n      // console.log(`月がずれてる？？？:${m}`)\n      // console.log(`00${date.getMonth()}`)\n      console.log(`${date.getFullYear()}${m}${d}${h}${mi}${s}`)\n\n\n\n      return `${date.getFullYear()}${m}${d}${h}${mi}${s}`\n    }\n\n    interface CustomFormData extends FormData {\n      append(name: string, value: string | Blob | number, fileName?: string):any\n    }\n\n    const formDataCreate = (props: PostProps) :CustomFormData => {\n      const formData = new FormData() as CustomFormData\n      const params = {\n        booktitle: targetItem.title,\n        author: targetItem.author,\n        bookimage: targetItem.imageUrl,\n        thoughts: props.thoughts,\n        page: props.page,\n        readingtime: props.readingtime,\n        date: dateTimeFormat(props.date),\n        // date: \"20210817084643\",\n        userid: userId,\n      }\n      // data.append(\"booktitle\", \"react\")\n      Object.entries(params).forEach(([key, value]) => {\n        formData.append(key, value)\n      })\n      console.log(formData)\n      return formData\n    }\n\n    if(loginFlag){\n      // formDataCreate()\n      axios.post(`${railsUrl}/restricted/books`,formDataCreate(props)\n      ,configAxios\n      ).then((res) => {\n        setTargetFlag(() => false);\n        setTargetItem(() => ({title: \"\", author: \"\", imageUrl: \"\",itemUrl: \"\"}))\n        setIdea(() => (\"\"))\n        return \"OK!!\"\n\n      })\n      .catch(error => {\n        return \"error!!!\"\n      });\n\n    } else {\n      showToast(\"ログインしてください\")\n\n    }\n    return \"OK!!!!\"\n\n  }\n\n  const [idea, setIdea] = useState<string>()\n\n  const [kinoArrangeData, setKinoArrangeData ] = useState([])\n\n  const targetFlagChangeReset = ():void => {\n    setTargetFlag(() => false);\n    setTargetItem(() => ({title: \"\", author: \"\", imageUrl: \"\",itemUrl: \"\"}))\n    setData(() => [])\n    setGoogleData(() => [])\n    setTsutayaData(() => [])\n    setKinoData(() => [])\n    setKinoArrangeData(() => [])\n    setText(() => '')\n    setIdea(() => (\"\"))\n  }\n\n  // useEffect(()=>{\n  //   const ip :string[] = window.location.href.split('/')\n  //   console.log(ip[2])\n  //   setMyIp(`http://${ip[2]}:3000`)\n  // },[])\n  // const [myIp, setMyIp] = useState<string>()\n  const toast = useToast()\n  const showToast = (message: string) => {\n    toast({\n      position: \"top\",\n      duration: 2000,\n      render: () => (\n        <Box color=\"white\" p={3} className=\"bg-indigo-800 rounded-md\">\n          {message}\n        </Box>\n      ),\n    })}\n\n\n    // golangに変更関係！--------------------------------\n    const dateTimeFormat = () =>  {\n      const date = new Date() // まあ、ここをinputで受け取れるようにする\n      console.log(`${date.getFullYear()}${date.getMonth()}${date.getDate()}${date.getHours()}${date.getMinutes()}${date.getSeconds()}`)\n      console.log(`${date.getFullYear()}-0${date.getMonth()}-${date.getDate()} 0${date.getHours()}:0${date.getMinutes()}:${date.getSeconds()}`)\n\n      const m = (`00${date.getMonth()}`).slice(-2)\n      const d = (`00${date.getDate()}`).slice(-2)\n      const h = (`00${date.getHours()}`).slice(-2)\n      const mi = (`00${date.getMinutes()}`).slice(-2)\n      const s = (`00${date.getSeconds()}`).slice(-2)\n\n      console.log(`${date.getFullYear()}${m}${d}${h}${mi}${s}`)\n\n\n\n      return `${date.getFullYear()}${m}${d}${h}${mi}${s}`\n    }\n    /*\n    const formDataCreate = () => {\n      const formData = new FormData()\n      const params = {\n        booktitle: targetItem.title,\n        author: targetItem.author,\n        bookimage: targetItem.imageUrl,\n        thoughts: props.thoughts,\n        date: dateTimeFormat(),\n        userid: \"1\",\n      }\n      // data.append(\"booktitle\", \"react\")\n      Object.entries(params).forEach(([key, value]) => {\n        formData.append(key, value)\n      })\n    }\n    */\n    const [countIsOk, SetCountIsOk] = useState(false)\n    const [bookCollections, setBookCollections ] = useState([]) //うーん直接リターンでも良さそうだけど...\n    const [createIsOk, SetCreateIsOk] = useState(false)\n    const [editIsOk, SetEditIsOk] = useState(false)\n\n\n    const onClickGetIndexRails = () => {\n      axios.get(`${railsUrl}/restricted/thoughts/${userId}`,configAxios\n      // {headers: { 'X-Requested-With': 'XMLHttpRequest'}, withCredentials: true, params: {user_id: userId}}\n      ).then((res) => {\n        console.log(res)\n        // setBooksIndex(() => res.data.books)\n        if (res.data !== null){\n        setBooksIndex(() => res.data) //のちにres.data.booksとしてgoから返却させる！！！！\n      }\n      })\n      .catch(error => {\n        // console.error(error);\n      });\n    }\n\n  return (\n    <MainContext.Provider value={{ data, setData, text, setText,\n    name, setName, password, setPassword, configAxios, booksIndex, setBooksIndex,loginFlag ,setLoginFlag ,railsUrl, onClickTop,\n    userId, setUserId, googleData, setGoogleData, targetFlagChangeReset, targetItem, setTargetItem,onClickPostRails, setTime,idea, setIdea,targetFlag, setTargetFlag,showToast,\n    tsutayaData,setTsutayaData,kinoData, setKinoData,kinoArrangeData, setKinoArrangeData, token, checkAuth,\n    countIsOk, SetCountIsOk,bookCollections, setBookCollections,createIsOk, SetCreateIsOk,editIsOk, SetEditIsOk, onClickGetIndexRails }}>\n      { children }\n    </MainContext.Provider>\n  )\n}\n","import { Dispatch, SetStateAction } from \"react\"\nimport { Link } from \"react-router-dom\"\n\ninterface Props{\n  setMenuFlag: Dispatch<SetStateAction<boolean>>,\n  onClickLogOut: Dispatch<SetStateAction<void>>,\n  loginFlag: boolean,\n\n}\nexport const SideMenu = ({setMenuFlag, onClickLogOut, loginFlag}:Props) => {\n  const onClickCloseMenu = () => {\n    setMenuFlag(false)\n  }\n  const onClickLogOutCloseMenu = () => {\n    onClickLogOut()\n    onClickCloseMenu()\n  }\n  return(\n\n\n<div className=\"relative bg-gray-900 h-96 dark:bg-gray-800 rounded-b-lg md:hidden\">\n    <div className=\"flex flex-col sm:flex-row sm:justify-around\">\n        <div className=\"w-60 h-screen\">\n            <nav className=\"mt-4 px-6\">\n              <Link to=\"/\">\n                <a onClick={onClickCloseMenu}\n                className=\"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 my-6 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-100 dark:text-gray-400 rounded-lg \">\n                <span className=\"flex-grow text-right pr-2\">\n                    HOME\n                    </span>\n                </a>\n                    </Link>\n                    <Link to=\"/login\">\n                <a onClick={onClickCloseMenu}\n                className=\"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 my-6 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-100 dark:text-gray-400 rounded-lg \">\n                    <span className=\"flex-grow text-right pr-2\">\n                    LOG IN\n                    </span>\n                </a>\n                </Link>\n                {loginFlag &&\n                <>\n\n                <a onClick={onClickLogOutCloseMenu}\n                className=\"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 my-6 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-100 dark:text-gray-400 rounded-lg \">\n\n                    <span className=\"flex-grow text-right pr-2\">\n                    LOG OUT\n\n                    </span>\n                </a>\n                <Link to=\"/index\">\n                <a onClick={onClickCloseMenu}\n                className=\"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 my-6 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-100 dark:text-gray-400 rounded-lg \">\n                    <span className=\"flex-grow text-right pr-2\">\n                    INDEX\n                    </span>\n                </a>\n                    </Link>\n                <Link to=\"/collection\">\n                <a onClick={onClickCloseMenu}\n                className=\"hover:text-gray-800 hover:bg-gray-100 flex items-center p-2 my-6 transition-colors dark:hover:text-white dark:hover:bg-gray-600 duration-200  text-gray-100 dark:text-gray-400 rounded-lg \">\n                    <span className=\"flex-grow text-right pr-2\">\n                    COLLECTION\n                    </span>\n                </a>\n                    </Link>\n                </>\n                }\n            </nav>\n        </div>\n    </div>\n</div>\n\n\n  )\n}\n","import React, { useContext, useState, VFC } from 'react';\nimport styled from 'styled-components'\nimport { BrowserRouter, Link, Switch, Route, useHistory } from 'react-router-dom'\nimport axios from 'axios';\nimport { MainContext } from '../providers/Provider';\nimport { SideMenu } from './SideMenu';\nimport './Header.scss';\n\nexport const Header: VFC = () => {\n  const { configAxios, loginFlag, setLoginFlag,railsUrl,showToast } = useContext(MainContext);\n\n  const history = useHistory();\n\n  const onClickLogOut = (): void => {\n    /*\n    axios.delete(`${railsUrl}/logout`,configAxios)\n    .then((res) => {\n      setLoginFlag(() => false)\n      history.push(\"/\")\n      showToast(\"ログアウトしました\")\n    })\n    .catch(error => {\n    });\n    */\n\n\n  // ここで、cookieから token削除の処理する！！！\n\n  document.cookie = \"token=; max-age=0\";\n\n    history.push(\"/\")\n    setLoginFlag(() => false)\n    showToast(\"ログアウトしました\")\n  }\n  // メニューバー！\n    const [menuFlag, setMenuFlag] = useState<boolean>(false);\n\n    const  onClickMenu = (): void => {\n      setMenuFlag(!menuFlag)\n    }\n\n  return(\n      <>\n    <div className=\"container items-center -mb-1\">\n    <div className=\"text-ind-700 rounded-lg\">\n      <div className=\"w-screen flex justify-between md:justify-start  p-5 mx-auto md:items-center md:flex-row\">\n        <a href=\"/\" className=\"pr-2 md:pr-8 md:px-6 focus:outline-none\">\n          <div className=\"inline-flex items-center\">\n            <div className=\"w-2 h-2 p-2 mr-2 rounded-full bg-gradient-to-tr bg-indigo-700 \">\n            </div>\n            <h2 className=\"block p-2 text-xl font-medium tracking-tighter text-black transition duration-500 ease-in-out transform cursor-pointer hover:text-indigo-900 md:text-x md:mr-8\"> MEMENTO TIME </h2>\n          </div>\n        </a>\n\n        {/* メニューバー */}\n        <nav className=\"md:block flex flex-wrap items-center justify-center text-base md:mr-auto\">\n          <ul className=\" items-center inline-flex list-none md:inline-flex\">\n            <li className=\"headershowup\">\n            <Link to=\"/\">\n              <div className=\"px-4 py-1 mr-1 text-base text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n              {/* <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"></path></svg> */}\n                HOME</div>\n                </Link>\n            </li>\n            <li className=\"headershowup\">\n            <Link to=\"/login\">\n            <div className=\"px-4 py-1 mr-1 text-base text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                LOG IN</div>\n                </Link>\n            </li>\n            { loginFlag &&\n            <>\n            <li className=\"headershowup\">\n              <div onClick={onClickLogOut} className=\"cursor-pointer px-4 py-1 mr-1 text-base text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                LOG OUT</div>\n            </li>\n            <li className=\"headershowup\">\n            <Link to=\"/index\">\n              <div className=\"px-4 py-1 mr-1 text-base text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                INDEX</div>\n                </Link>\n            </li>\n            <li className=\"headershowup\">\n            <Link to=\"/collection\">\n              <div className=\"px-4 py-1 mr-1 text-base text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                COLLECTION</div>\n                </Link>\n            </li>\n            </>}\n          </ul>\n        </nav>\n\n        <div onClick={onClickMenu}\n        className=\"relative md:hidden pl-10 flex w-20 h-10 z-40\">\n              <button\n              className=\"\">\n                <svg className=\"text-gray-900  w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path></svg>\n                </button>\n\n\n\n        </div>\n              {menuFlag &&\n              <>\n              <div className=\"absolute z-30 top-20 right-0\">\n              <SideMenu setMenuFlag={setMenuFlag} onClickLogOut={onClickLogOut} loginFlag={loginFlag}/>\n\n              </div>\n              </>\n              }\n        {/* <button className=\"w-auto px-8 py-2 my-2 text-base font-medium text-white transition duration-500 ease-in-out transform bg-blue-600 border-blue-600 rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:b-gblue-700 \">Button </button> */}\n      </div>\n    </div>\n  </div>\n  <div className=\"bg-gray-900 h-5\"></div>\n  {/* <SideMenu /> */}\n</>\n\n  )\n  // return(\n  //   <>\n  //   <header className=\"h-14 bg-indigo-300 flex items-center space-x-4 \">\n  //     <p style={{color: \"#fff\"}}>sssss</p>\n  //   {/* <div className=\"\">\n  //     <div className=\"w-20 bg-yellow-500 h-4\"></div>\n  //   </div> */}\n  //   <div className=\"space-x-3 relative hidden md:block\">\n\n  //   <Link to=\"/\">\n  //     <button className=\"bg-white p-3 m-3 rounded-full text-yellow-400  hover:text-white hover:bg-indigo-900\">HOME</button>\n  //     {/* <button className=\"bg-white p-3 m-3 text-yellow-400 hover:text-white hover:bg-indigo-900\" style={{borderRadius: \"16px\"}}>HOME</button> */}\n  //   </Link>\n  //   <Link to=\"/login\">\n  //   <button className=\"bg-white p-3 m-3 rounded-full text-yellow-400  hover:text-white hover:bg-indigo-900\">LOG IN</button>\n  //   </Link>\n  //   { loginFlag ?\n  //   <>\n  //   <button onClick={onClickLogOut}>LOG OUT</button>\n  //   <Link to=\"/index\">\n  //   <button>INDEX</button>\n  //   </Link>\n  //   </>\n  //     : false\n  //   }\n\n  //   </div>\n\n  //   {/* <MenuList /> */}\n  //   <div className=\"flex items-center space-x-7\">\n  //     <div className=\"w-20 bg-yellow-500 h-4\"></div>\n  //   <h1 className=\"text-yellow-800 text-3xl font-mono mx-auto w-full\" >MEMENTO TIME</h1>\n  //     <div className=\"w-20 bg-yellow-500 h-4\"></div>\n\n  //   </div>\n  //   </header>\n  //   </>\n  // )\n}\nconst SContainer = styled.header`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: #81C784;\n`\nconst SButton = styled.button`\n  background-color: #FAFAFA;\n  border: none;\n  padding: 8px;\n  border-radius: 8px;\n  margin: 0 10px;\n  color: #81C784;\n  &:hover {\n    cursor: pointer;\n    background-color: #FFF;\n    color: #FFCCBC;\n  }\n  `\nconst STexst = styled.h2`\n  color: #FFCCBC;\n  display: inline-block;\n  margin: 0 auto;\n  `\n","import React, { VFC } from 'react';\nimport styled from 'styled-components'\n\nexport const Footer: VFC = () => {\n  return(\n    <>\n<div className=\" h-28\">\n\n<div className=\"w-full items-center fixed bottom-0 right-0\">\n            <footer className=\"text-blueGray-700 transition duration-500 ease-in-out transform  \">\n              <div className=\"h-11 flex justify-between flex-col p-1 mx-auto md:items-center md:flex-row\">\n                <div className=\"fixed right-0 \">\n\n                <a href=\"/\" className=\"pr-2 lg:pr-8 lg:px-6 focus:outline-none\">\n                  <div className=\"inline-flex items-center\">\n                    <div className=\"block p-2 text-base tracking-tighter text-black transition duration-500 ease-in-out transform cursor-pointer hover:text-blueGray-500 lg:text-x lg:mr-8\">\n                       &copy; memento time. </div>\n                  </div>\n                </a>\n                </div>\n              </div>\n            </footer>\n          </div>\n</div>\n\n    </>\n  )\n}\nconst SContainer = styled.footer`\n  height: 30px;\n  display: flex;\n  align-items: center;\n  background-color: #81C784;\n  bottom: 0;\n`\nconst SButton = styled.button`\n  background-color: #FAFAFA;\n  border: none;\n  padding: 8px;\n  border-radius: 8px;\n  margin: 0 10px;\n  color: #81C784;\n  &:hover {\n    cursor: pointer;\n    background-color: #FFF;\n    color: #FFCCBC;\n  }\n  `\nconst STexst = styled.p`\n  color: #FFCCBC;\n  display: inline-block;\n  margin: 0 auto;\n  `\n","import { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, useDisclosure } from '@chakra-ui/react'\nimport React, { ChangeEvent, useContext } from 'react'\nimport { MainContext } from '../../providers/Provider'\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\ninterface Props{\n  indexFlag: boolean,\n  isOpen: boolean,\n  onClose: () => void\n}\n\nconst ModalTest = (props: Props) => {\n  const { indexFlag, isOpen, onClose } = props\n\n  const { data, setData, setText, configAxios, railsUrl, userId, onClickPostRails,idea, setIdea,targetItem, setTargetItem,targetFlag, setTargetFlag, setTime } = useContext(MainContext);\n\n  const onChangeIdea = (e: ChangeEvent<HTMLInputElement>) => {\n    setIdea(() => e.target.value)\n  }\n\n  const onChangeTime = (e: ChangeEvent<HTMLInputElement>) => {\n    setTime(() => e.target.valueAsNumber)\n  }\n\n  const targetFlagResetOnlyModal = () => {\n    setTargetFlag(() => false);\n    setTargetItem(() => ({}))\n    setIdea(() => (\"\"))\n  }\n  // React Hook Formのところ-------------------------------\n  const { register, handleSubmit, formState: {errors} , reset } = useForm<FormStatus>({criteriaMode: \"all\", shouldFocusError: true})\n  const onSubmit: SubmitHandler<FormStatus> = (data) => {\n    // console.log(data.password)\n    // setName(() => data.username)\n    // setPassword(() => data.password)\n    // onClickAciton(data.username, data.password)\n\n    console.log(data.date)\n    onClickPostRails(data) // railsの方で引数取るようにする...\n\n    //で送ったらformstatusリセットだろうなああ....\n    reset(data)\n  };\n\n  interface FormStatus{\n    thoughts: string,\n    date: string,\n    page: number,\n    readingtime: number,\n\n  }\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose} motionPreset=\"slideInBottom\">\n        <ModalOverlay />\n          <ModalContent>\n          <ModalCloseButton />\n          <ModalHeader>full in your thought!!</ModalHeader>\n          {/* <h2 className=\"mb-3 text-xs font-semibold tracking-widest text-black uppercase title-font\">full in your thought </h2> */}\n          <img alt=\"NO IMAGE\" src={targetItem.imageUrl} className=\"object-contain h-72\"/>\n          <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"flex flex-col w-full mx-auto mb-8  md:mt-0\">\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Thought</label>\n                  <textarea //value={idea} // onChange={onChangeIdea}\n                   placeholder=\"感じたこと\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"thoughts\", {\"required\":  true})}\n                  />\n                     <span className=\"text-red-500 \">{errors.thoughts?.types?.required && \"Thoughtが入力されていません\"}<br/></span>\n                </div>\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Page</label>\n                  <input //value={idea} // onChange={onChangeIdea}\n                  type=\"text\" placeholder=\"ページ数\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"page\", {maxLength: 10,pattern: /^[0-9]+$/,})}\n                  />\n                     <span className=\"text-red-500 \">{errors.page?.types?.maxLength && \"10文字以内で入力してください\"}<br/>\n                                                        {errors.page?.types?.pattern && \"半角数字で入力してください\"}<br/></span>\n                </div>\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Reading Time</label>\n                  <input //value={idea} // onChange={onChangeIdea}\n                  type=\"text\" placeholder=\"読んだ時分（分単位）\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"readingtime\", {maxLength: 10,pattern: /^[0-9]+$/,})}\n                  />\n                     <span className=\"text-red-500 \">{errors.readingtime?.types?.maxLength && \"10文字以内で入力してください\"}<br/>\n                                                        {errors.readingtime?.types?.pattern && \"半角数字で入力してください\"}<br/></span>\n                </div>\n\n                {!indexFlag &&\n                  <div className=\"relative mt-4\">\n                    <label htmlFor=\"name\" className=\"text-base leading-7 text-blueGray-500\">Time</label>\n                    <input // onChange={onChangeTime}\n                    type=\"datetime-local\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                    // value={Date.now()}\n                    {...register(\"date\", {\"required\":  true})}\n                    />\n                     <span className=\"text-red-500 \">{errors.date?.types?.required && \"Dateが入力されていません\"}<br/></span>\n                  </div>\n\n                }\n                <div className=\"flex my-6 mt-4\">\n                  <label className=\"flex items-center\">\n\n                  </label>\n                </div>\n                <button type=\"submit\"\n                // onClick={onClickPostRails}\n                className=\"w-full px-16 py-2 mr-2 text-base font-medium text-white transition duration-500 ease-in-out transform bg-yellow-300 border-yellow-300 rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:bg-yellow-400 \">\n                   SEND </button>\n                <p className=\"mx-auto mt-3 text-xs text-blueGray-500\"> memento mori..</p>\n              </div>\n              </form>\n          </ModalBody>\n          </ModalContent>\n\n      </Modal>\n    </>\n  )\n}\n\nexport default ModalTest\n","import { useDisclosure } from '@chakra-ui/react'\nimport axios from 'axios'\nimport React, { ChangeEvent, useContext, useState } from 'react'\n// import ReactDatePicker from 'react-datepicker'\nimport styled from 'styled-components'\nimport { MainContext } from '../providers/Provider'\n// import { MyButton } from './atoms/MyButton'\nimport { Modal } from './organisms/Modal'\nimport ModalTest from './organisms/ModalTest'\n// import './Result.scss'; //うーーーーん楽天だけ？？ //レンダリングのしようか...\n\ninterface Props{\n  data: PreparedData[]\n  apiName: string\n}\n\ninterface PreparedData{\n  title: string,\n  author: string,\n  itemUrl: string,\n  imageUrl: string,\n}\n\nexport const Result = (props: Props) => {\n  const { setData, setText, configAxios, railsUrl, userId, targetFlagChangeReset, targetItem, setTargetItem, onClickPostRails, setTime , idea, setIdea\n  ,targetFlag, setTargetFlag} = useContext(MainContext);\n\n  const {data, apiName} = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n\n\n  // const [targetFlag, setTargetFlag] = useState(false)\n\n  // const [time, setTime] = useState()\n\n  const targetFlagChange = () => {\n    setTargetFlag(() => true);\n  }\n  // const targetFlagChangeReset = () => {\n  //   setTargetFlag(() => false);\n  //   setTargetItem(() => ({Item: {title: \"\", author: \"\", itemUrl: \"\", imageUrl: \"\"}}))\n  //   setData(() => [])\n  //   setText(() => '')\n  //   setIdea(() => (\"\"))\n  // }\n\n  const onChangeIdea = (e: ChangeEvent<HTMLInputElement>) => {\n    setIdea(() => e.target.value)\n  }\n\n  const onClickTargetItem = (e: TargetItem) => {\n    const Target = {title: e.title, author: e.author, imageUrl: e.imageUrl}\n    // console.log(Target)\n    setTargetItem(Target)\n\n    targetFlagChange()\n    onOpen()\n  }\n\n\n\n  axios.interceptors.request.use(\n    config => {\n\n      return config\n    }\n  )\n\n  axios.interceptors.response.use(response => {\n\n    return response\n  })\n\n\n\n  // const onClickPostRails = () => {\n  //   const trans = time / 1000\n  //   axios.post(`${railsUrl}/books`,{\n  //     booktitle: targetItem.title,\n  //     author: targetItem.author,\n  //     bookimage: targetItem.imageUrl,\n  //     thoughts: idea,\n  //     date: trans,\n  //     user_id: userId\n  //   },configAxios).then((res) => {\n  //     // console.log(res.data);        // レスポンスデータ\n  //     // console.log(res.status);      // ステータスコード\n  //     // console.log(res.statusText);  // ステータステキスト\n  //     // console.log(res.headers);     // レスポンスヘッダ\n  //     // console.log(res.config);      // コンフィグ\n  //     setTargetFlag(() => false);\n  //     setTargetItem(() => ({}))\n  //     setIdea(() => (\"\"))\n\n  //   })\n  //   .catch(error => {\n\n  //   });\n\n  // }\n\n  const onChangeTime = (e: ChangeEvent<HTMLInputElement>) => {\n    setTime(() => e.target.valueAsNumber)\n  }\n\n\n\n\n\n  const [ show, setShow] = useState(false)\n  // モーダル用\n\n  const targetFlagResetOnlyModal = () => {\n    setTargetFlag(() => false);\n    setTargetItem(() => ({}))\n    setIdea(() => (\"\"))\n  }\n\n\n  interface TargetItem {\n    title: string;\n    author: string;\n    imageUrl: string;\n    itemUrl: string;\n  }\n\n  const styleJSX: React.CSSProperties ={\n    marginTop: \"-2px\"\n  }\n\n\n\n\n  // #scrolled\n\n  // const cb = (entris:any, observer:any) => {\n  //   console.log(\"intersecting!!!?\")\n  //   entris.forEach((entry:any) => {\n  //     if(entry.isIntersecting) {\n  //       console.log(\"inview!!\")\n  //       console.log(entry.target)\n  //       entry.target.classList.add(\"viewing\")\n  //       // entry.target.classList.remove(\"invisible\")\n\n  //     }else{\n  //       console.log(\"outview!!\")\n  //       // entry.target.classList.add(\"invisible\")\n\n\n  //       // entry.target.classList.remove(\"testclass\") //これつけるとズーーーっと出たり入ったりする\n  //       // つまり、一覧だから、初回に入るときにエフェクトがあればいいかな？と思う\n  //       // 見づらいかなって\n\n  //     }\n  //   })\n  // }\n  // const options = {\n  //   // rootMargin: \"-300px  0px\"\n  // }\n  // const io = new IntersectionObserver(cb, options)\n  // if(document.querySelector('.scrolled')){\n  //   const els = document.querySelectorAll('.scrolled')\n  //   console.log(els)\n  //   els.forEach(el => io.observe(el))\n  //   // io.observe(document.querySelector('.scrolled')!)\n\n  // }\n  // // if(document.querySelector('#scrolled')){\n  // //   io.observe(document.querySelector('#scrolled')!)\n\n  // // }\n\n\n\n\n\n\n\n  return(\n    <SContainer>\n\n        {data.length !== 0 &&\n        <>\n        <div className=\"hidden md:block\">\n\n        <div\n       className=\"bg-indigo-900 text-white cursor-default rounded-b-none border-t-2 border-r-2 border-l-2 border-gray-900  w-32 text-center px-4 py-1 mr-1 text-base text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                {apiName}\n                {/* <div className=\"border-b-4 border-purple-400 \">\n                </div> */}\n\n                </div>\n                <div className=\"border-t-2 border-gray-900  h-1 w-11/12 pr-2\" style={styleJSX}></div>\n        </div>\n\n\n\n\n        {/* <h1 className=\"ml-1 text-indigo-900 font-bold text-xl hidden md:block\">{apiName} */}\n        {/* <div className=\"border-b-4 w-10/12 border-purple-400 \">\n                </div> */}\n        {/* </h1> */}\n      <ul>\n        {data.map((item, index) => {\n          return(\n            // <SItem key={index}>\n\n\n        // <div className=\"text-center \">\n        <div className=\"m-3 inline-block scrolled\">\n\n\n        <div key={index} className=\"overflow-hidden shadow-lg rounded-lg h-90 w-72 cursor-pointer ml-1 hover:opacity-85\">\n            <a className=\"w-full block h-full\">\n              <div className=\"h-80\">\n                <a href={item.itemUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img alt=\"NO IMAGE\" src={item.imageUrl} className=\"max-h-full w-full object-cover\"/>\n\n                </a>\n\n              </div>\n                <div className=\"bg-white dark:bg-gray-800 w-full p-4\">\n                    <p className=\"text-indigo-500 text-md font-medium\">\n                        {apiName}Book\n                    </p>\n                    <div className=\"h-32 relative p-2\">\n\n                    <p className=\"text-gray-800 dark:text-white text-base font-medium mb-2\">\n                    { item.title }\n                    </p>\n                    <p className=\"text-gray-400 dark:text-gray-300 font-light text-md\">\n                    { item.author }\n                    </p>\n                    <div onClick={() => onClickTargetItem(item)}\n                     className=\"object-cover rounded-full bg-indigo-600 h-10 w-10 hover:opacity-80 absolute top-20 right-0\">\n                    <svg className=\"text-white object-cover p-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path></svg>\n\n                    </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n        </div>\n\n\n              );\n        })}\n      </ul>\n        </>\n\n      }\n\n\n\n\n      { targetFlag &&\n        <>\n        {/* <Modal indexFlag={false}/> */}\n        <ModalTest indexFlag={false} isOpen={isOpen} onClose={onClose}/>\n\n      </>\n\n      }\n    </SContainer>\n  )\n}\n\n\n\n\n\nconst SContainer = styled.div`\n  margin: 10px 10px;\n`\nconst SItem = styled.div`\n  height: 100%;\n  border: solid #81C784 1px;\n  background-color: #FAFAFA;\n  margin: 10px;\n  border-radius: 8px;\n  padding: 8px;\n  /* box-shadow: 5px 5px 5px black; */\n`\nconst SList = styled.li`\n  list-style: none;\n  text-align: center;\n  padding: 10px;\n  /* color: #81C784;\n  font-weight: bold; */\n`\nconst SImage = styled.img`\n  margin: 0 auto;\n  display: block;\n`\n// const SMyButton =styled(MyButton)`\n//   background-color: #FFCCBC;\n//   color: #FAFAFA;\n// `\n\nconst SButton = styled.button`\n  background-color: #FFCCBC;\n  border: none;\n  padding: 8px;\n  border-radius: 8px;\n  margin: 0 10px;\n  color: #FAFAFA;\n  /* border: solid #81C784 1px; */\n  &:hover {\n    cursor: pointer;\n    background-color: #FFF;\n    color: #FFCCBC;\n  }\n  `\n\nconst SInput = styled.input`\n  height: 20px;\n  border-radius: 8px;\n  border: solid #81C784 1px;\n  outline: none;\n  padding: 4px;\n  width: 400px;\n  margin: 10px;\n  `\n\nconst SItemTarget = styled.div`\n\n  border: solid #81C784 1px;\n  background-color: #FAFAFA;\n  margin: 10px;\n  border-radius: 8px;\n  `\n\nconst STexst = styled.p`\n  color: #81C784;\n  display: inline-block;\n  margin: 0 auto;\n  `\n","import React, { useContext } from 'react'\nimport { MainContext } from '../../providers/Provider'\nconst TopButton = () => {\n  const { onClickTop } = useContext(MainContext)\n  return (\n    <>\n      <div className=\"rounded-full bg-yellow-400 h-16 w-16 hover:opacity-80 fixed bottom-5 right-5 \" onClick={onClickTop}>\n        <svg className=\"text-white object-cover p-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 11l7-7 7 7M5 19l7-7 7 7\"></path></svg>\n      </div>\n    </>\n  )\n}\n\nexport default TopButton\n","export default __webpack_public_path__ + \"static/media/main.b5599f3c.jpg\";","import React, { useEffect } from 'react'\nimport './MainTitle.scss';\n\nconst MainTitle = () => {\n  /*\n\n\n  const title = \"Welcome To MEMENTOTIME!\"\n  document.addEventListener('DOMContentLoaded', ()=>{\n    // e.preventDefault();\n\n    // const el = document.querySelector(\".animate-title\")\n    // const str = el.innerHTML.trim()\n    let concatStr = \"\"\n\n    for (let c of title) {\n\n      concatStr += `<span className=\"char\">${c}</span>`\n      console.log(c)\n    }\n    document.querySelector(\".animate-title\").innerHTML = concatStr;\n    document.querySelector(\".animate-title\").classList.add(\"inview\")\n\n    console.log(concatStr)\n  })\n\n\n  */\n\n  return (\n    <div>\n      <div id=\"container \" >\n        <div className=\"animate-title\"\n        // onLoad={onLoad}\n        >\n          {/* Welcome To MEMENTOTIME! */}\n\n        </div>\n\n\n        <div className=\"animate-title inview \">\n          <span className=\"char mini\">W</span>\n          <span className=\"char mini\">e</span>\n          <span className=\"char mini\">l</span>\n          <span className=\"char mini\">c</span>\n          <span className=\"char mini\">o</span>\n          <span className=\"char mini\">m</span>\n          <span className=\"char mini\">e</span>\n          <span className=\"char mini\">T</span>\n          <span className=\"char mini\">o</span>\n            <br />\n          <span className=\"char\">M</span>\n          <span className=\"char\">E</span>\n          <span className=\"char\">M</span>\n          <span className=\"char\">E</span>\n          <span className=\"char\">N</span>\n          <span className=\"char\">T</span>\n          <span className=\"char\">O</span>\n          <span className=\"char\">T</span>\n          <span className=\"char\">I</span>\n          <span className=\"char\">M</span>\n          <span className=\"char\">E</span>\n          <span className=\"char\">!</span>\n        </div>\n\n\n\n      </div>\n        {/* <div className=\"animate-title inview mini pb-32 md:pb-52\">\n          <span className=\"char\">W</span>\n          <span className=\"char\">e</span>\n          <span className=\"char\">l</span>\n          <span className=\"char\">c</span>\n          <span className=\"char\">o</span>\n          <span className=\"char\">m</span>\n          <span className=\"char\">e</span>\n          <span className=\"char\">T</span>\n          <span className=\"char\">o</span>\n        </div>\n\n        <div className=\"animate-title inview \">\n\n          <span className=\"char\">M</span>\n          <span className=\"char\">E</span>\n          <span className=\"char\">M</span>\n          <span className=\"char\">E</span>\n          <span className=\"char\">N</span>\n          <span className=\"char\">T</span>\n          <span className=\"char\">O</span>\n          <span className=\"char\">T</span>\n          <span className=\"char\">I</span>\n          <span className=\"char\">M</span>\n          <span className=\"char\">E</span>\n          <span className=\"char\">!</span>\n        </div>\n      </div> */}\n    </div>\n  )\n}\n\nexport default MainTitle\n","import React from 'react'\nimport mainImage from '../assets/main.jpg' //TOP画面のimage画像\nimport MainTitle from './animations/MainTitle'\nimport './Search.scss';\n\nconst MainImage = () => {\n  return (\n    <>\n        <div className=\"relative w-10/12 mx-auto main-sepia\">\n\n        <img src={mainImage} alt=\"memento time\" className=\"mx-auto \"/>\n        <div className=\"w-screen z-10\" style={{position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",}}>\n              <div>\n\n              <MainTitle />\n              </div>\n        {/* <h1 className=\" font-black tracking-tighter  text-white hover:text-yellow-300 text-5xl title-font text-center cursor-default\n          transition duration-500 ease-in-out transform\n        \">Welcome to */}\n                  {/* <div className=\"mt-3 ml-1 tracking-tighter text-gray-600  text-base font-medium\">Search Books now!</div> */}\n                  {/* </h1> */}\n        </div>\n        </div>\n        </>\n  )\n}\n\nexport default MainImage\n","import axios from 'axios'\nimport React, { ChangeEvent, TextareaHTMLAttributes, useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { MainContext } from '../providers/Provider'\nimport { Result } from './Result'\n// import { API_KEY } from '../api/API_KEY'\n// import { MyButton } from './atoms/MyButton'\nimport { Footer } from './Footer'\nimport { Test } from './Test'\nimport { ResultGoogleTest } from './ResultGoogleTest'\nimport { PhoneResult } from './PhoneResult'\nimport mainImage from '../assets/main.jpg' //TOP画面のimage画像\nimport MainTitle from './animations/MainTitle'\nimport './Search.scss';\nimport { Tooltip } from '@chakra-ui/react'\nimport TopButton from './atoms/TopButton'\nimport MainImage from './MainImage'\n\n// buildしてくれ...\nexport const Search = () => {\n  const { railsUrl, data, setData, text, setText, onClickTop, googleData, setGoogleData,targetFlagChangeReset,tsutayaData,setTsutayaData,kinoData, setKinoData,kinoArrangeData, setKinoArrangeData } = useContext(MainContext);\n  const appId = process.env.REACT_APP_RAKUTEN_API_KEY\n  // const goUrl = process.env.REACT_APP_GO_URL\n  // console.log(appId)\n  const [page, setPage] = useState(2)\n  // commit commit!!!!!!!!!!!\n\n  const onClickNextPage = ():void => {\n    onClickRakutenAPINextPage()\n    onClickGoogleAPINextPage()\n    onClickGetGoTsutayaAPINextPage()\n    onClickGetGoKinoAPINextPage()\n    setPage(page + 1)\n    setGooglePage(googlePage + 30)\n    // setKinoPage(kinoPage + 2)\n  }\n\n  const onClickRakutenAPINextPage = ():void => {\n    // const appId = API_KEY.RakutenAPI_KEY\n    axios.get(\"https://app.rakuten.co.jp/services/api/BooksTotal/Search/20170404?\", {\n      params: {format: \"json\",\n      keyword: text,\n      applicationId: appId,\n      page: page,\n    }\n    }).then((res) => {\n      const newArray = [...data, ...dataArrangeRakutenAPI(res.data.Items)]\n      setData(newArray);\n    })\n  }\n\n  const onChangeTarget = (e: ChangeEvent<HTMLInputElement>) => {\n  // const onChangeTarget = (e: ChangeEvent<HTMLInputElement> | TextareaHTMLAttributes<HTMLTextAreaElement>) => {\n    setText(() => e.target.value)\n  }\n\n\n\n\n\n  const onClickSearch = (): void => {\n    setData([])\n    setGoogleData([])\n    setTsutayaData([])\n    setKinoData([])\n    setPage(2)\n    setGooglePage(30)\n    setKinoPage(1)\n    setKinoArrangeData([])\n\n\n    onClickGetGoogleAPI();\n    onClickGetRakutenAPI();\n    onClickGetGoTsutayaAPI();\n    onClickGetGoKinoAPI();\n  }\n\n  interface RakutenItems{\n    Item:{\n      title: string,\n      author: string,\n      itemUrl: string,\n      largeImageUrl: string\n\n    }\n  }\n  const dataArrangeRakutenAPI = (items: [RakutenItems]) => {\n    const newArray: PreparedData[] = [];\n    items.map((item, index: number) => {\n      const oneItem = {\n        title: item.Item.title,\n        author: item.Item.author,\n        itemUrl: item.Item.itemUrl,\n        imageUrl: item.Item.largeImageUrl,\n    }\n    newArray.push(oneItem)\n      // console.log(oneItem,index)\n    })\n    return newArray\n  }\n\n  interface GoogleItems{\n    volumeInfo:{\n      title: string,\n      authors: string[],\n      infoLink: string,\n      imageLinks: {\n        thumbnail: string\n      }\n    }\n  }\n\n  const dataArrangeGoogleAPI = (items: [GoogleItems]) => {\n    const newArray: PreparedData[] = [];\n    if (items != null){\n    items.map((item, index: number) => {\n      const oneItem = {\n        title: item.volumeInfo.title,\n        author:\n          item.volumeInfo.authors == null ?\n          \"\":\n          item.volumeInfo.authors[0] ,\n        itemUrl: item.volumeInfo.infoLink,\n        imageUrl:\n            item.volumeInfo.imageLinks == null ?\n           \"\" :\n           item.volumeInfo.imageLinks.thumbnail,\n    }\n    newArray.push(oneItem)\n    })}\n    return newArray\n\n  }\n\n  interface PreparedData{\n    title: string,\n    author: string,\n    itemUrl: string,\n    imageUrl: string,\n  }\n\n\n  const onClickGetRakutenAPI= () => {\n    axios.get(\"https://app.rakuten.co.jp/services/api/BooksTotal/Search/20170404?\", {\n      params: {format: \"json\",\n      keyword: text,\n      applicationId: appId}\n    }).then((res) => {\n      setData(dataArrangeRakutenAPI(res.data.Items));\n      setPage(2)\n    })\n  }\n\n\n\n  const onClickGetGoogleAPI = () => {\n    axios.get('https://www.googleapis.com/books/v1/volumes',{params:{\n      q: `intitle:${text}`,\n      maxResults: 30, //楽天に合わせた\n      startIndex: 0, //ページ数などではなくItem数で取得する仕様のよう スタートは0\n    }})\n    .then((res) => {\n      if (res.data != null){\n      dataArrangeGoogleAPI(res.data.items)\n\n      setGoogleData(dataArrangeGoogleAPI(res.data.items))}\n    })\n  }\n\n    const [googlePage, setGooglePage] = useState(30)\n\n\n  const onClickGoogleAPINextPage = () => {\n    axios.get('https://www.googleapis.com/books/v1/volumes',{params:{\n      q: `intitle:${text}`,\n      maxResults: 30, //楽天に合わせた\n      startIndex: googlePage, //ページ数などではなくItem数で取得する仕様のよう スタートは0\n    }})\n    .then((res) => {\n      if (res.data.items != null) {\n        const newArray = [...googleData, ...dataArrangeGoogleAPI(res.data.items)]\n        setGoogleData(newArray);\n\n      }\n    })\n  }\n\n  const onClickGetGoTsutayaAPINextPage =() =>{\n    axios.get(`${railsUrl}/tsutaya?`,{params:\n    {q: text,\n      page:  page, //ひとまずpage1 tsutayaは30件か...\n    }}).then((res)=> {\n      if (res.data.items != null) {\n        const newArray = [...tsutayaData, ...res.data.items]\n\n        setTsutayaData(newArray)\n        // console.log(newArray)\n\n      }\n      // const newArray = [...data, ...dataArrangeRakutenAPI(res.data.Items)]\n      // setData(newArray);\n    })\n  }\n  const [kinoPage, setKinoPage] = useState(1)\n  const onClickGetGoKinoAPINextPage = ()=>{\n    axios.get(`${railsUrl}/kino?`,{params:\n    {q: text,\n      page: kinoPage, //ひとまずpage1 で紀伊國屋は20件か... うーむ...\n    }}).then((res)=> {\n      if (res.data.items != null) {\n        const newArray = [...kinoData, ...res.data.items]\n        setKinoData(newArray)\n        // arrngKinoData = res.data.slice(0,30)\n        // console.log(arrngKinoData)\n        // console.log(res)\n      }\n    })\n    console.log( Math.floor(kinoPage / 2) + 1)\n\n\n  }\n\n  const [phoneTabsState, setPhoneTabsState] = useState(true)\n  const onClickGoogleTabs = () => {\n    setPhoneTabsState(true)\n  }\n  const onClickRakutenTabs = () => {\n    setPhoneTabsState(false)\n  }\n\n  // const mainImage = require('../assets/main.jpg');\n  const getTopPosition = document.scrollingElement;\n  window.onscroll = () => {\n    // if (document.getElementById(\"want\") === null){\n    const want = document.getElementById(\"want\")\n    if (getTopPosition === null || want === null){\n      return\n    }\n    if(getTopPosition.scrollTop > 190){\n      want.classList.add(\"fixed\",\"top-0\");\n      // console.log(want)\n      // console.log(\"大きくスクロール！！！\")\n    } else if (getTopPosition.scrollTop < 190){\n      want.classList.remove(\"fixed\",\"top-0\");\n    }\n  }\n\n  // console.log(getTopPosition.scrollTop)\n  // useEffect(() => {\n  //   // if (document.getElementById(\"google-tab\") === null){\n  //   if (document.getElementById(\"google-tab\") === null){\n  //     return\n  //   }\n  //   const googleElement = document.getElementById(\"google-tab\")\n  //   const rakutenElement = document.getElementById(\"rakuten-tab\")\n  //   if (googleElement === null || rakutenElement === null ){\n  //     return\n  //   }\n  //   phoneTabsState &&\n  //     googleElement.classList.add(\"bg-indigo-900\",\"text-white\");\n  //     phoneTabsState &&\n  //     rakutenElement.classList.remove(\"bg-indigo-900\",\"text-white\");\n\n  //     !phoneTabsState &&\n  //     googleElement.classList.remove(\"bg-indigo-900\",\"text-white\");\n  //     !phoneTabsState &&\n  //     rakutenElement.classList.add(\"bg-indigo-900\",\"text-white\");\n\n  // },[phoneTabsState])\n\n\n\n  const styleJSX: React.CSSProperties ={\n    marginBottom: \"-2px\"\n  }\n\n  // let arrngKinoData : [] = [] // useStateにする...\n\n  const onClickGetGoKinoAPI = ()=>{\n    axios.get(`${railsUrl}/kino?`,{params:\n    {q: text,\n      page: kinoPage, //ひとまずpage1 で紀伊國屋は20件か... うーむ...\n    }}).then((res)=> {\n      if (res.data.items != null) {\n      setKinoData(res.data.items)\n      // arrngKinoData = res.data.slice(0,30)\n      // console.log(arrngKinoData)\n      // console.log(res)\n    }\n    // setKinoPage(kinoPage + 2)\n    })\n\n  }\n  const onClickGetGoTsutayaAPI = ()=>{\n    axios.get(`${railsUrl}/tsutaya?`,{params:\n    {q: text,\n      page:  page - 1, //ひとまずpage1 tsutayaは30件か...\n    }}).then((res)=> {\n      if (res.data.items != null) {\n      setTsutayaData(res.data.items)\n      // console.log(res)\n      }\n    })\n  }\n\n\n  const [tabStatus, setTabStatus] = useState(1)\n\n\n//   const tabfunc = () : JSX.Element => {\n//     switch (tabStatus){\n//     case 1:\n//       console.log(\"1です\")\n//       return <span>GoodMorning</span>\n\n//     case 2:\n//       console.log(\"2です\")\n//       return <span>GoodMorning2</span>\n\n//   }\n//   return <span>GoodMorning2</span>\n// }\n\nuseEffect(() => {\n  if (document.getElementById(\"google-tab\") !== null){\n  switch (tabStatus){\n    case 1:\n      document.getElementById(\"google-tab\")!.classList.add(\"bg-indigo-900\",\"text-white\");\n      // document.getElementById(\"google-tab\")!.classList.toggle(\"bg-indigo-900\");\n      // document.getElementById(\"google-tab\")!.classList.toggle(\"text-white\");\n      document.getElementById(\"rakuten-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"tsutaya-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"kinokuniya-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      break\n    case 2:\n      document.getElementById(\"rakuten-tab\")!.classList.add(\"bg-indigo-900\",\"text-white\");\n      // document.getElementById(\"rakuten-tab\")!.classList.toggle(\"bg-indigo-900\");\n      // document.getElementById(\"rakuten-tab\")!.classList.toggle(\"text-white\");\n      document.getElementById(\"google-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"tsutaya-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"kinokuniya-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      break\n    case 3:\n      document.getElementById(\"tsutaya-tab\")!.classList.add(\"bg-indigo-900\",\"text-white\");\n      // document.getElementById(\"rakuten-tab\")!.classList.toggle(\"bg-indigo-900\");\n      // document.getElementById(\"rakuten-tab\")!.classList.toggle(\"text-white\");\n      document.getElementById(\"google-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"rakuten-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"kinokuniya-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      break\n    case 4:\n      document.getElementById(\"kinokuniya-tab\")!.classList.add(\"bg-indigo-900\",\"text-white\");\n      // document.getElementById(\"rakuten-tab\")!.classList.toggle(\"bg-indigo-900\");\n      // document.getElementById(\"rakuten-tab\")!.classList.toggle(\"text-white\");\n      document.getElementById(\"google-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"rakuten-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      document.getElementById(\"tsutaya-tab\")!.classList.remove(\"bg-indigo-900\",\"text-white\");\n      break\n  }}\n},[tabStatus])\n  const kinoArrange = () => {\n\n    if (kinoData.length !== 0){\n      // const arr = kinoData.map((i: PreparedData) => {\n\n      // })\n      // let arr: PreparedData[] = []\n      // for(let i = 0; i <= 30 ; i++){\n      //   setKinoArrangeData(...kinoData ,kinoData[i])\n      //   // console.log(kinoData[i])\n      // }\n      const i = (Math.floor(kinoPage / 2) + 1)\n      console.log(i * 30)\n      const arr = kinoData.slice(0,30 * i)\n      setKinoArrangeData(arr)\n      console.log(arr)\n      // console.log(kinoData)\n      // console.log(kinoArrangeData)\n      setKinoPage(kinoPage + 2)\n    }\n  }\n  useEffect(()=> kinoArrange(),[kinoData])\n  // const [kinoArrangeData, setKinoArrangeData ] = useState([])\n  console.log(kinoArrangeData)\n\n\n\n\n  // #scrolled\n\n  const cb = (entris:any, observer:any) => {\n    console.log(\"intersecting!!!?\")\n    entris.forEach((entry:any) => {\n      if(entry.isIntersecting) {\n        console.log(\"inview!!\")\n        console.log(entry.target)\n        entry.target.classList.add(\"viewing\")\n        // entry.target.classList.remove(\"invisible\")\n\n      }else{\n        console.log(\"outview!!\")\n        // entry.target.classList.add(\"invisible\")\n\n\n        // entry.target.classList.remove(\"testclass\") //これつけるとズーーーっと出たり入ったりする\n        // つまり、一覧だから、初回に入るときにエフェクトがあればいいかな？と思う\n        // 見づらいかなって\n\n      }\n    })\n  }\n  const options = {\n    // rootMargin: \"-300px  0px\"\n  }\n  const io = new IntersectionObserver(cb, options)\n  // if(document.querySelector('.scrolled')){\n  //   const els = document.querySelectorAll('.scrolled')\n  //   console.log(els)\n  //   els.forEach(el => io.observe(el))\n  //   // io.observe(document.querySelector('.scrolled')!)\n\n  // }\n  // if(document.querySelector('#scrolled')){\n  //   io.observe(document.querySelector('#scrolled')!)\n\n  // }\n\n  const watchScroll = () => {\n    const els = document.querySelectorAll('.scrolled')\n    console.log(els)\n    els.forEach(el => io.observe(el))\n    // io.observe(document.querySelector('.scrolled')!)\n  }\nuseEffect(watchScroll,[googleData, data, kinoData, tsutayaData])\n\n\n  return(\n    <>\n    <div>\n      {/* <Test /> */}\n      <div className=\"ml-2 search-ber-right-up\">\n      <div className=\"flex justify-end ml-auto items-en xl:flex-nowrap md:flex-nowrap lg:flex-wrap mt-8 mr-4 mb-5\">\n      <Tooltip label=\"検索したい本のタイトルを入力してください！\" closeDelay={500}\n      //bg=\"gray.800\"\n      placement=\"bottom-start\">\n        <div className=\"relative w-5/12 md:w-72 mr-2\">\n          <input value={text} onChange={onChangeTarget} type=\"text\" placeholder=\"検索タイトルを入力！\"\n           className=\"bg-gray-200 w-full px-3 py-1 leading-8 text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\" />\n        </div>\n        </Tooltip>\n        <div className=\"flex\">\n        <button onClick={onClickSearch} className=\"px-3 md:px-6 py-2 font-medium text-white transition duration-500 ease-in-out transform bg-indigo-900  border-blue-600 rounded-md ext-base focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:bg-indigo-500 mr-3\">\n        SEARCH</button>\n        <button onClick={targetFlagChangeReset} className=\"px-3 md:px-6 py-2 font-medium text-white transition duration-500 ease-in-out transform bg-yellow-300  rounded-md ext-base focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:bg-yellow-200 mr-3\">\n          RESET</button>\n\n        </div>\n        </div>\n      </div>\n\n\n    {/* Result画面 */}\n\n      <div className=\"md:flex\">\n\n            {/* スマホ用 */}\n      <div className=\"md:hidden\">\n      {/* <PhoneResult /> */}\n\n      <>\n\n        {/* うーん...切り替えボタンがなあ... length!!!!!!! */}\n          {data.length !== 0 && googleData.length !== 0 &&\n        <div id=\"want\" className=\" ml-4 z-50 bg-white w-full pt-2\" style={styleJSX}> {/* : React.CSSProperties */}\n          {/* 上 fixed したい */}\n          {/* <div className=\"cursor-default mt-3 ml-1 tracking-tighter text-gray-400  text-base font-medium\">On Click Contents Change!!</div> */}\n\n          <div className=\"flex\">\n      <div>\n      {/* <div id=\"google-tab\" onClick={onClickGoogleTabs} */}\n      <div id=\"google-tab\" onClick={()=>setTabStatus(1)}\n       className=\"bg-white rounded-b-none border-t-2 border-r-2 border-l-2 border-gray-900 cursor-pointer w-20 text-center px-1 py-1 mr-1 text-xs text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                Google\n                {/* {phoneTabsState &&\n                <div className=\"border-b-4 opacity-0 border-purple-400 \">\n                </div>\n                } */}\n                </div>\n\n      </div>\n      <div>\n      {/* <div id=\"rakuten-tab\" onClick={onClickRakutenTabs} */}\n      <div id=\"rakuten-tab\" onClick={()=>setTabStatus(2)}\n       className=\"bg-white rounded-b-none border-t-2 border-r-2 border-l-2 border-gray-900 cursor-pointer w-20 text-center px-1 py-1 mr-1 text-xs text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                Rakuten\n                {/* {!phoneTabsState &&\n                <div className=\"border-b-4 opacity-0 border-purple-400 \">\n                </div>\n                } */}\n                </div>\n\n      </div>\n      <div>\n      {/* <div id=\"rakuten-tab\" onClick={onClickRakutenTabs} */}\n      <div id=\"tsutaya-tab\" onClick={()=>setTabStatus(3)}\n       className=\"bg-white rounded-b-none border-t-2 border-r-2 border-l-2 border-gray-900 cursor-pointer w-20 text-center px-1 py-1 mr-1 text-xs text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                TSUTAYA\n                {/* {!phoneTabsState &&\n                <div className=\"border-b-4 opacity-0 border-purple-400 \">\n                </div>\n                } */}\n                </div>\n\n      </div>\n      <div>\n      {/* <div id=\"rakuten-tab\" onClick={onClickRakutenTabs} */}\n      <div id=\"kinokuniya-tab\" onClick={()=>setTabStatus(4)}\n       className=\"bg-white rounded-b-none border-t-2 border-r-2 border-l-2 border-gray-900 cursor-pointer w-20 text-center px-1 py-1 mr-1 text-xs text-blueGray-500 transition duration-500 ease-in-out transform rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:text-white hover:bg-indigo-900 \">\n                Kinokuniya\n                {/* {!phoneTabsState &&\n                <div className=\"border-b-4 opacity-0 border-purple-400 \">\n                </div>\n                } */}\n                </div>\n\n      </div>\n\n          </div>\n                <div className=\"border-t-2 border-gray-900  h-1 w-11/12 pr-2\" style={styleJSX}></div>\n\n        </div>\n                 }\n                {/* {phoneTabsState ?\n\n                <>\n                <div className=\"max-w-screen-md mx-auto\">\n                <Result data={googleData} apiName=\"Google\"/>\n                </div>\n                </>\n\n                :\n                <>\n                <div className=\" max-w-screen-md mx-auto\">\n                  <Result data={data} apiName=\"Rakuten\"/>\n                  </div>\n                </>\n                } */}\n\n\n                {\n                  tabStatus === 1 &&\n                  <>\n                <div className=\"max-w-screen-md mx-auto\">\n                <Result data={googleData} apiName=\"Google\"/>\n                </div>\n                </>\n                }\n                {\n                  tabStatus === 2 &&\n                  <>\n                <div className=\" max-w-screen-md mx-auto\">\n                  <Result data={data} apiName=\"Rakuten\"/>\n                  </div>\n                </>\n                }\n                {\n                  tabStatus === 3 &&\n                  <>\n                <div className=\" max-w-screen-md mx-auto\">\n                <Result data={tsutayaData} apiName=\"TSUTAYA\"/>\n                  </div>\n                </>\n                }\n                {\n                  tabStatus === 4 &&\n                  <>\n                <div className=\" max-w-screen-md mx-auto\">\n                <Result data={kinoArrangeData} apiName=\"Kinokuniya\"/>\n                {/* <Result data={kinoData} apiName=\"Kinokuniya\"/> */}\n                  </div>\n                </>\n                }\n\n\n</>\n\n      </div>\n      <div className=\"hidden md:block max-w-screen-md mx-auto\">\n      {/* <ResultGoogleTest /> */}\n      <Result data={googleData} apiName=\"Google\"/>\n      </div>\n      <div className=\"hidden md:block max-w-screen-md mx-auto\">\n      <Result data={data} apiName=\"Rakuten\"/>\n      </div>\n      <div className=\"hidden md:block max-w-screen-md mx-auto\">\n      <Result data={tsutayaData} apiName=\"TSUTAYA\"/>\n      </div>\n      <div className=\"hidden md:block max-w-screen-md mx-auto\">\n      <Result data={kinoArrangeData} apiName=\"Kinokuniya\"/>\n      {/* <Result data={kinoData} apiName=\"Kinokuniya\"/> */}\n      </div>\n\n      </div>\n      { data != \"\" ?\n      <>\n      <div className=\"flex items-center justify-center w-full\">\n      <div className=\"rounded-full  h-20 w-20 hover:opacity-80 mb-3\"\n      onClick={onClickNextPage}>\n      <svg className=\"object-cover p-3 cursor-pointer\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path></svg>\n      {/* <svg className=\"object-cover p-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path></svg> */}\n        {/* さらに読み込む */}\n        </div>\n\n      </div>\n\n      {/* <MyButton onClick={onClickTop}>ウエーに戻る</MyButton> */}\n      </>\n      :\n      <>\n        <MainImage/>\n        {/* <div className=\"relative w-10/12 mx-auto main-sepia\">\n\n        <img src={mainImage} alt=\"memento time\" className=\"mx-auto \"/>\n        <div className=\"w-screen z-10\" style={{position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",}}>\n              <div>\n\n              <MainTitle />\n              </div>\n\n        </div>\n        </div> */}\n        </>\n\n\n      }\n      <div className=\"\">\n\n      <Footer />\n      {/* <div className=\"rounded-full bg-yellow-400 h-16 w-16 hover:opacity-80 fixed bottom-5 right-5 \" onClick={onClickTop}>\n      <svg className=\"text-white object-cover p-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 11l7-7 7 7M5 19l7-7 7 7\"></path></svg>\n\n      </div> */}\n      <TopButton />\n      </div>\n    </div>\n      </>\n  )\n}\n\n\nconst SContainer = styled.div`\n  margin: 20px 10px 10px 10px;\n  height: 50px;\n`\nconst SInput = styled.input`\n  height: 20px;\n  border-radius: 8px;\n  border: solid #81C784 1px;\n  outline: none;\n  padding: 4px;\n  width: 200px;\n  `\n","import { Tooltip } from '@chakra-ui/react';\nimport React, { ChangeEvent, Dispatch, memo, SetStateAction, useContext } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { MainContext } from '../providers/Provider';\n\n\ninterface Props{\n  acitonTitle: string,\n  actionComment: string,\n  onClickAciton: any,\n}\n\n// interface FormInput{\n//   username: string,\n//   password: string\n// }\ninterface FormStatus{\n  username: string,\n  password: string\n//   username:{\n//   required: string;\n//   maxLength: number;\n//   pattern: string;\n// }\n//   password:{\n//     required: string;\n//     minLength: number;\n//     pattern: string;\n//   }\n}\n\nconst LoginInputItem = memo((props: Props) => {\n  const { acitonTitle ,actionComment,onClickAciton} = props\n  // onClickCangeSignupFlag ???\n\n\n\n\n  // React Hook Formのところ-------------------------------\n  const { register, handleSubmit, formState: {errors} , reset } = useForm<FormStatus>({criteriaMode: \"all\", shouldFocusError: true})\n  const onSubmit: SubmitHandler<FormStatus> = (data) => {\n    // console.log(data.password)\n    // setName(() => data.username)\n    // setPassword(() => data.password)\n    onClickAciton(data.username, data.password)\n    reset()\n  };\n\n  return (\n    <>\n              <form onSubmit={handleSubmit(onSubmit)}>\n\n                <h1 className=\"cursor-default my-12 font-black tracking-tighter text-black hover:text-indigo-900 text-5xl title-font\">\n                  {acitonTitle} .\n                <div className=\"mt-3 ml-1 tracking-tighter text-gray-400  text-base font-medium\">\n                  {actionComment}</div>\n                </h1>\n                <div>\n                <Tooltip label=\"小文字英数字で入力してください！\" placement=\"top-start\"\n                bg=\"gray.500\" closeDelay={500}>\n                  <label className=\"text-base font-medium leading-relaxed text-blueGray-700\">User Name <span className=\"tracking-tighter text-gray-400  text-sm font-medium\" >※ lower case letter and number</span></label>\n                  {/* <p className=\"mt-3 ml-1 tracking-tighter text-gray-400  text-base font-medium\">小文字英数字</p> */}\n                  </Tooltip>\n                  <input //onChange={onChangeName} name=\"username\"\n                  {...register(\"username\", {\"required\":  true,maxLength: 16,pattern: /^[a-z0-9]+$/,})}\n                  // {...register(\"maxLength\", {maxLength: 16})}\n                  // {...register(\"pattern\", {pattern: /^[a-z]+$/i})}\n                  type=\"name\" placeholder=\"User Name \"\n                  className=\"border-2 border-gray-500 w-full px-4 py-2 mt-2 text-base text-indigo-900 border-transparent rounded-lg bg-blueGray-100 ext-blue-700 focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"/>\n                  <span className=\"text-red-500 \">{errors.username?.types?.required && \"User Nameが入力されていません\"}<br/>\n                  {errors.username?.types?.maxLength && \"16文字以内で入力してください\"}<br/>\n                  {errors.username?.types?.pattern && \"小文字英数字で入力してください\"}<br/></span>\n                  {/* autocomplete=\"\" required=\"\"*/}\n                </div>\n                <div className=\"mt-4\">\n                <Tooltip label=\"小文字英数字8文字以上で入力してください！\" placement=\"top-start\"\n                bg=\"gray.500\" closeDelay={500}>\n                  <label className=\"text-base font-medium leading-relaxed text-blueGray-700\">Password <span className=\"tracking-tighter text-gray-400  text-sm font-medium\" >※ lower case letter and number, 8 or more characters </span></label>\n                  </Tooltip>\n                  <input //onChange={onChangePassword} name=\"password\"\n                   {...register(\"password\", { required: true, minLength: 8 ,pattern: /^[a-z0-9]+$/})}\n                   type=\"password\" placeholder=\"Password\"\n                   className=\"border-2 border-gray-500 w-full px-4 py-2 mt-2 text-base text-indigo-900 border-transparent rounded-lg bg-blueGray-100 ext-blue-700 focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"/>\n                   <span className=\"text-red-500 \">{errors.password?.types?.required && \"Passwordが入力されていません\"}<br/>\n                   {errors.password?.types?.minLength && \"8文字以上で入力してください\"}<br/>\n                   {errors.password?.types?.pattern && \"小文字英数字で入力してください\"}<br/></span>\n                   {/* required=\"\" minlength=\"6\" */}\n                </div>\n                <div className=\"mt-2 text-right\">\n                </div>\n                <button //onClick={onClickAciton}\n                type=\"submit\"\n                className=\"bg-yellow-400 block w-full px-4 py-3 mt-6 font-semibold text-white transition duration-500 ease-in-out transform rounded-lg  hover:bg-yellow-500 focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2 hover:to-black\">\n                  {acitonTitle}</button>\n              </form>\n\n              {/* <div onClick={onClickCangeSignupFlag}\n              className=\"cursor-pointer\">切り替え</div> */}\n              {/* ここは共通化いらなそう！ */}\n\n    </>\n  )\n}\n)\nexport default LoginInputItem\n","import axios from 'axios'\nimport React, { ChangeEvent, memo, useContext, useState, VFC } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components'\nimport { MainContext } from '../providers/Provider';\nimport ErrorMessage from './ErrorMessage';\nimport LoginInputItem from './LoginInputItem';\nimport { Box, useToast } from \"@chakra-ui/react\"\nimport Confetti from 'react-confetti'\n\n\nexport const Lonin: VFC = memo(() => {\n  const {  configAxios, loginFlag, setLoginFlag, railsUrl, userId, setUserId ,showToast} = useContext(MainContext);\n  // const { name, setName, password, setPassword, configAxios, loginFlag, setLoginFlag, railsUrl, userId, setUserId } = useContext(MainContext);\n\n\n  const history = useHistory();\n\n  // const toast = useToast()\n\n  const onClickLogIn = (name: string, password: string): void => {\n    const data = new FormData()\n    data.append(\"name\", name)\n    data.append(\"password_digest\", password)\n    axios.post(`${railsUrl}/login`,\n    data\n    /*{\n      name: name,\n      password: password\n    }\n    ,configAxios*/).then((res) => {\n      // console.log(res.data.token)\n      document.cookie = `token=${res.data.token}`\n      setUserId(res.data.userid);\n      history.push(\"/index\")\n      // setName(() => (\"\"))\n      // setPassword(() => (\"\"))\n      setLoginFlag(() => true)\n      showToast(\"ログインしました\")\n      // const a = <Confetti\n      //   recycle={false} />\n      // document.querySelector(\"div\")!.insertBefore(a, theFirstChild)\n      // (()=>{\n      //   <Confetti\n      //   recycle={false}\n      // />\n      // })()\n    })\n    .catch((error) => {\n      showToast(\"ログインできません\")\n      // console.log(error)\n      // showToast(\"ログインしました\")\n      // alert(\"ログインできません...（Usernameとpasswordをご確認ください...）\")\n    });\n\n  }\n// const [errorFlag, setErrorFlag] = useState<boolean>(false);\n  //新規登録用！！！\n  const onClickSignUp = (name: string, password: string):void => {\n    const data = new FormData()\n    data.append(\"name\", name)\n    data.append(\"password_digest\", password)\n    axios.post(`${railsUrl}/users`,data).then((res) => {\n      document.cookie = `token=${res.data.token}`\n      setUserId(res.data.userid);\n      history.push(\"/index\")\n      // setName(() => (\"\"))\n      // setPassword(() => (\"\"))\n      setLoginFlag(() => true)\n      showToast(\"アカウント作成しました\")\n      console.log(res.data.userid)\n      // setUserId(res.data); //ひとまずコメントアウト（現状user_idを送り返してないから）\n      // setUserId(res.data.user_id); //ひとまずコメントアウト（現状user_idを送り返してないから）\n      console.log(res.data)\n    })\n    .catch((error) => {\n      showToast(\"アカウント作成できません\")\n      // document.querySelector('main')?.addEventListener()\n      // console.log(error)\n      // alert(\"作成できません...（名前は小文字英数字16文字以内でお願いします）\")\n      // てかさ送る前にバリデーションかけよ？？？\n    });\n    /*\n    axios.post(`${railsUrl}/users`,{\n        name: name,\n        password: password\n      },configAxios).then((res) => {\n        setUserId(res.data.user_id);\n        history.push(\"/index\")\n        // setName(() => (\"\"))\n        // setPassword(() => (\"\"))\n        setLoginFlag(() => true)\n        showToast(\"アカウント作成しました\")\n      })\n      .catch((error) => {\n        showToast(\"アカウント作成できません\")\n        // document.querySelector('main')?.addEventListener()\n        // console.log(error)\n        // alert(\"作成できません...（名前は小文字英数字16文字以内でお願いします）\")\n        // てかさ送る前にバリデーションかけよ？？？\n      });\n      */\n  }\n//  const showToast = (message: string) => {\n//   toast({\n//     position: \"top\",\n//     duration: 2000,\n//     render: () => (\n//       <Box color=\"white\" p={3} className=\"bg-indigo-800 rounded-md\">\n//         {message}\n//       </Box>\n//     ),\n//   })\n//  }\n\n  const [signupFlag, setSignupFlag] = useState<boolean>(true)\n\n  const onClickCangeSignupFlag = ():void => {\n    setSignupFlag(!signupFlag)\n    // ここでifなんとかでbuttonName返せば良さそう！\n    // let toggleBottonName\n\n    // if (signupFlag) {\n    //   toggleBottonName = \"Sign Up?\"\n    // } else {\n    //   toggleBottonName = \"Log In?\"\n    // }\n    // return toggleBottonName\n  }\n  // console.log(window.location.href)\n\n\n  // const axiostest :string = `${location.href}:3000`\n\n\n\n  return(\n    <>\n<section\nclassName=\"flex flex-col items-center h-screen md:flex-row \">\n            <div className=\"relative hidden w-full h-screen bg-blueGray-400 lg:block md:w-1/3\">\n              <img src=\"https://source.unsplash.com/random\" alt=\"\" className=\"absolute object-cover w-full h-full\"/>\n              {/* <img src=\"https://dummyimage.com/300x600/F3F4F7/000000\" alt=\"\" className=\"absolute object-cover w-full h-full\"/> */}\n              <div className=\"relative z-10 m-12 text-left\">\n                <a className=\"flex items-center w-32 mb-4 font-medium text-blueGray-900 title-font md:mb-10\">\n                  {/* <div className=\"w-2 h-2 p-2 mr-2 rounded-full bg-gradient-to-tr from-blue-300 to-blue-600\">\n                  </div> */}\n                  {/* <h2 className=\"text-lg font-bold tracking-tighter text-black uppercase transition duration-500 ease-in-out transform hover:text-lightBlack-500 dark:text-lightBlue-400\"> Wickedblocks </h2> */}\n                </a>\n              </div>\n            </div>\n\n            <div className=\"flex w-full h-screen px-6 bg-whitelack md:max-w-md lg:max-w-full md:mx-auto md:w-1/2 lg:px-16 xl:px-12 items-left justify-left\">\n              <div className=\"mt-6\">\n\n  {signupFlag ?\n\n          <>\n\n            <LoginInputItem acitonTitle=\"Log In\" onClickAciton={onClickLogIn} actionComment=\"Welcome Back to MEMENTO TIME!\" />\n\n            <div onClick={onClickCangeSignupFlag}\n              className=\"text-indigo-600 cursor-pointer mt-3\">{signupFlag  && \"Sign Up?\" }</div>\n\n\n            </>\n  :\n<>\n  <LoginInputItem acitonTitle=\"Sign Up\" onClickAciton={onClickSignUp} actionComment=\"Welcome to MEMENTO TIME!\" />\n\n\n  <div onClick={onClickCangeSignupFlag}\n              className=\"text-indigo-600 cursor-pointer mt-3\">{!signupFlag  && \"Log In?\" }</div>\n            </>\n}\n              </div>\n            </div>\n\n</section>\n\n    </>\n  )\n})\n\nconst SContainer = styled.div`\n  padding: 20px;\n  background-color: #FAFAFA;\n  height: 100vh;\n`\n\nconst SInput = styled.input`\n  height: 20px;\n  border-radius: 8px;\n  border: solid #81C784 1px;\n  outline: none;\n  padding: 4px;\n  width: 200px;\n  `\nconst SButton = styled.button`\nbackground-color: #FFCCBC;\nborder: none;\npadding: 8px;\nborder-radius: 8px;\nmargin: 0 10px;\ncolor: #FAFAFA;\n/* border: solid #81C784 1px; */\n&:hover {\n  cursor: pointer;\n  background-color: #FFF;\n  color: #FFCCBC;\n}\n`\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Test } from '../Test';\nimport Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\nimport './BookCalendar.scss';\n\nconst BookCalendar = ({indexDateArr}) => {\n    // const testData = {\n    //     month_item: {\n    //         2021-09-10: {te}\n\n    //     }\n\n    // }\n    let test = 0\n    // console.log(`test${new Date(\"2022-02-22\")}`)\n    const getTileContent = ({date, view}) => {\n        if (view !== \"month\") {\n          return null;\n        }\n        // console.log(date)\n        // console.log(new Date(date))\n        // console.log(test) //数字\n        // console.log(`${date.getFullYear()}${date.getMonth()}${date.getDate()}`)\n        // test++\n        // console.log(indexDateArr)\n        // const targetDate = {date: \"2021-09-09\", event: \"test_event\"} // ここをrails All での値を評価したい\n\n        // const arrangDate = new Date(targetDate.date)\n        // console.log(`${arrangDate.getFullYear()}${arrangDate.getMonth()}${arrangDate.getDate()}`)\n        // const flag = indexDateArr.forEach(i => {\n        //     if  (`${date.getFullYear()}${date.getMonth()}${date.getDate()}` === i) {\n        //     // if  (`${date.getFullYear()}${date.getMonth()}${date.getDate()}` === `${arrangDate.getFullYear()}${arrangDate.getMonth()}${arrangDate.getDate()}`) {\n        //         // return <p>{targetDate.event}</p>\n        //         return true\n        //     }\n        //     return true\n        // }\n        //     )\n            // console.log(flag)\n        const found = indexDateArr.find(a => `${date.getFullYear()}${date.getMonth()}${date.getDate()}` === a)\n        // console.log(`あった！？${found}`)\n            if (found !== undefined ) {\n                return <div className=\"mx-auto pt-2 w-6 pb-4\">\n                        <svg className=\"w-6 h-6 text-red-600 rounded-full border-2 border-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z\"></path><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z\"></path></svg>\n                    </div>\n\n            }\n\n\n\n\n        // return\n        // date === new Date() && \"aaaaa\"\n        // return (\n\n        //     // \"sss\"\n        // //   <p >\n        // //     <br />\n        // //     XXX予約数： AAA\n        // //     <br />\n        // //     YYY予約数： BBB\n        // //   </p>\n        // );\n      };\n\n  return(\n\n\n    <>\n\n        <Calendar locale=\"ja-JP\" calendarType=\"US\" value={new Date()}\n        // tileContent=\"test\"\n        tileContent={getTileContent}\n        // onClickDay={(value) => {}}\n        />\n\n    {/* <Test /> */}\n    {/* <div>\n        <div className=\"mx-auto container py-20 px-6\">\n            <div className=\"w-full flex items-cente justify-between\">\n                <div>\n                    <h4 className=\"text-xs xl:text-base text-gray-900 dark:text-gray-100\">September 2018</h4>\n                </div>\n                <div className=\"md:flex justify-center hidden w-1/2\">\n                    <div className=\"flex items-center\">\n                        <svg className=\"cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\" width={12} height={12} viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#353F47\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <polyline points=\"15 6 9 12 15 18\" />\n                        </svg>\n                        <svg className=\"cursor-pointer ml-20\" xmlns=\"http://www.w3.org/2000/svg\" width={12} height={12} viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#353F47\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <polyline points=\"9 6 15 12 9 18\" />\n                        </svg>\n                    </div>\n                </div>\n                <div>\n                    <a href=\"javascript:void(0)\">\n                        <h4 className=\"text-indigo-700 cursor-pointer text-xs lg:text-base font-light text-right\">Month view</h4>\n                    </a>\n                </div>\n                <div>\n                    <a href=\"javascript:void(0)\">\n                        <h4 className=\"text-xs lg:text-base cursor-pointer text-gray-700 dark:text-gray-200 font-light text-right ml-6\">Week view</h4>\n                    </a>\n                </div>\n                <div>\n                    <a href=\"javascript:void(0)\">\n                        <h4 className=\"text-xs lg:text-base cursor-pointer text-gray-700 dark:text-gray-200 font-light text-right ml-6\">Day view</h4>\n                    </a>\n                </div>\n            </div>\n            <div className=\"w-full overflow-x-scroll xl:overflow-x-hidden mt-4\">\n                <table className=\"min-w-full bg-white dark:bg-gray-900\">\n                    <thead className=\"items-center\">\n                        <tr className=\"h-20\">\n                            <th className=\"px-10\">\n                                <p className=\"text-xs text-left text-gray-900 dark:text-gray-100 uppercase cursor-pointer\">Monday</p>\n                            </th>\n                            <th className=\"px-10\">\n                                <p className=\"text-xs text-left text-gray-900 dark:text-gray-100 uppercase cursor-pointer\">Tuesday</p>\n                            </th>\n                            <th className=\"px-10\">\n                                <p className=\"text-xs text-left text-gray-900 dark:text-gray-100 uppercase cursor-pointer\">Wednesday</p>\n                            </th>\n                            <th className=\"px-10\">\n                                <p className=\"text-xs text-left text-gray-900 dark:text-gray-100 uppercase cursor-pointer\">Thursday</p>\n                            </th>\n                            <th className=\"px-10\">\n                                <p className=\"text-xs text-left text-gray-900 dark:text-gray-100 uppercase cursor-pointer\">Friday</p>\n                            </th>\n                            <th className=\"px-10\">\n                                <p className=\"text-xs text-left text-gray-900 dark:text-gray-100 uppercase cursor-pointer\">Saturday</p>\n                            </th>\n                            <th className=\"px-10\">\n                                <p className=\"text-xs text-left text-gray-900 dark:text-gray-100 uppercase cursor-pointer\">Sunday</p>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className=\"border-b border-gray-300 dark:border-gray-700\">\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">27</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">28</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">29</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">30</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">31</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">1</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">2</p>\n                            </td>\n                        </tr>\n                        <tr className=\"border-b relative w-full border-gray-300 dark:border-gray-700\">\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">3</p>\n                            </td>\n                            <td className=\"border-r relative xl:static border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">4</p>\n                                <div className=\"absolute w-64 xl:w-1/5 ml-3 -mt-16 flex items-center bg-gray-100 dark:bg-gray-800 border-l-4 border-indigo-700 rounded py-1\">\n                                    <div className=\"ml-1\">\n                                        <p className=\"text-xs dark:text-gray-100 text-gray-900\">4 Sept – 5 Sept</p>\n                                        <p className=\"text-xs text-gray-800 dark:text-gray-100 mt-0.5\">Vacation</p>\n                                    </div>\n                                </div>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">5</p>\n                            </td>\n                            <td className=\"border-r relative border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">6</p>\n                                <div className=\"flex items-center -mt-16 absolute ml-4\">\n                                    <div className=\"w-3 h-3 bg-indigo-700 rounded\" />\n                                    <div className=\"ml-2\">\n                                        <p className=\"text-xs dark:text-gray-100 text-gray-900\">13:00 - 14:40</p>\n                                        <p className=\"text-xs text-gray-800 dark:text-gray-100 mt-1\">Doctor’s</p>\n                                    </div>\n                                </div>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">7</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">8</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">9</p>\n                            </td>\n                        </tr>\n                        <tr className=\"border-b relative border-gray-300 dark:border-gray-700\">\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">10</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">11</p>\n                            </td>\n                            <td className=\"border-r relative xl:static border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">12</p>\n                                <div className=\"absolute custom-width ml-3 -mt-16 flex items-center bg-gray-100 dark:bg-gray-800 border-l-4 border-indigo-700 rounded py-1\">\n                                    <div className=\"ml-1\">\n                                        <p className=\"text-xs dark:text-gray-100 text-gray-900\">12 Sept – 15 Sept</p>\n                                        <p className=\"text-xs text-gray-800 dark:text-gray-100 mt-0.5\">Tokyo - Business Trip</p>\n                                    </div>\n                                </div>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">13</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">14</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">15</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">16</p>\n                            </td>\n                        </tr>\n                        <tr className=\"border-b border-gray-300 dark:border-gray-700\">\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">17</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">18</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">19</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">20</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">21</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">22</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">23</p>\n                            </td>\n                        </tr>\n                        <tr className=\"border-b border-gray-300 dark:border-gray-700\">\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">24</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">25</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">26</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">27</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700\">\n                                <p className=\"text-xs text-gray-800 dark:text-gray-100 pt-2 pl-2 pb-16\">28</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">29</p>\n                            </td>\n                            <td className=\"border-r border-gray-300 dark:border-gray-700 bg-indigo-100\">\n                                <p className=\"text-xs text-gray-800  pt-2 pl-2 pb-16\">30</p>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n        <style>\n            {`\n        @media screen and (min-width: 375px) {\n            .custom-width {\n                width: 40rem;\n            }\n        }\n\n        @media screen and (min-width: 1300px) {\n            .custom-width {\n                width: 50%;\n            }\n        }`}\n        </style>\n    </div> */}\n    </>\n  )\n}\n\nexport default BookCalendar;\n","import React, { useContext, useEffect } from 'react'\nimport { useDisclosure } from '@chakra-ui/react'\nimport { MainContext } from '../../../providers/Provider'\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from '@chakra-ui/react'\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport axios from 'axios';\n\n\ninterface Props {\n  thought : Thought\n\n}\n\ninterface Thought{\n  id: number,\n  date: string,\n  booktitle: string,\n  author: string,\n  bookimage: string,\n  thoughts: any,\n  page?: number,\n  readingtime?: number,\n\n}\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n// ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\nconst EditThoughtsModal = (props: Props) => {\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const cancelRef = React.useRef<any>()\n  const { thought } = props\n\n  const { editIsOk, SetEditIsOk,railsUrl,configAxios,onClickGetIndexRails} = useContext(MainContext);\n\n  // React Hook Formのところ-------------------------------\n  const { register, handleSubmit, formState: {errors} , reset, setValue } = useForm<FormStatus>({criteriaMode: \"all\", shouldFocusError: true})\n  // const test = () => {\n  // これでモーダル初期レンダリング時に元のthoughtのvalue入れられる！！よし！\n  setValue('thoughts', thought.thoughts)\n  // ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n  // ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！\n  // setValue('date', thought.date)\n  // }\n  // useEffect(test,[])\n  // test()\n\n  const onSubmit: SubmitHandler<FormStatus> = (data) => {\n\n    console.log(data.date)\n\n  //  const Target = {title: collection.booktitle, author: collection.author, imageUrl: collection.bookimage}\n  //  setTargetItem(Target)\n\n  //   onClickPostRails(data) // railsの方で引数取るようにする...\n  onClickEditPostRails(data)\n    reset() //ああ余計な引数を取るから、resetされなかったんだ...あああ...\n    onClose()\n\n    //  ん？？？交互にエラーになってる....\n\n    // ブランクにする処理の方が早いから、エラーになってるぽいなあ...\n     // setTargetItem({title: \"\", author: \"\", imageUrl: \"\",itemUrl: \"\"})\n     // SetCreateIsOk(false)\n };\n const onClickEditPostRails = (data : FormStatus) =>{\n  const formData = new FormData()\n  formData.append(\"thoughts\", data.thoughts)\n  axios.patch(`${railsUrl}/restricted/thoughts/${thought.id}`,\n  formData\n  // {\n  //   // id: targetEditItem.item.id,\n  //   thoughts: targetEditThoughts\n  // }\n  ,configAxios\n  ).then((res) => {\n\n    onClickGetIndexRails() // これもプロバイダーで良さそうだけども。\n  })\n  .catch(error => {\n    // console.error(error);\n  });\n\n\n}\n\n\n  interface FormStatus{\n    thoughts: string,\n    date: string,\n    page: number,\n    readingtime: number,\n\n  }\n\n\n  // この辺りが、モーダルとか開くなどのロジック部分！！！\n  const openChange = () => {\n    if (editIsOk){\n      onOpen()\n    }\n    else {\n      // onClose()\n      // SetCountIsOk(false)\n\n    }\n  }\n  const isOpenChange = () => {\n    if (!isOpen){\n      SetEditIsOk(false)\n    }\n  }\n\n  useEffect(openChange,[editIsOk])\n  useEffect(isOpenChange,[isOpen])\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose} motionPreset=\"slideInBottom\">\n        <ModalOverlay />\n          <ModalContent>\n          <ModalCloseButton />\n          <ModalHeader>full in your thought!!</ModalHeader>\n      {/* ここの src={collection.bookimage} はこれでいいのか！！ なぜなら、SEND押した後に、collectionのbook情報を、targetItemにセットするから！*/}\n          <img alt=\"NO IMAGE\" src={thought.bookimage} className=\"object-contain h-72\"/>\n          <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"flex flex-col w-full mx-auto mb-8  md:mt-0\">\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Thought</label>\n                  <textarea //value={idea} // onChange={onChangeIdea}\n                    rows={5}\n                   placeholder=\"感じたこと\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"thoughts\", {\"required\":  true})}\n                  />\n                     <span className=\"text-red-500 \">{errors.thoughts?.types?.required && \"Thoughtが入力されていません\"}<br/></span>\n                </div>\n                {/* ページ数の編集はいらないか.... なぜなら...都度都度、indexに記録して欲しいから！！！！！！ */}\n                {/* <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Page</label>\n                  <input //value={idea} // onChange={onChangeIdea}\n                  type=\"text\" placeholder=\"ページ数\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"page\", {maxLength: 10,pattern: /^[0-9]+$/,})}\n                  />\n                     <span className=\"text-red-500 \">{errors.page?.types?.maxLength && \"10文字以内で入力してください\"}<br/>\n                                                        {errors.page?.types?.pattern && \"半角数字で入力してください\"}<br/></span>\n                </div>\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Reading Time</label>\n                  <input //value={idea} // onChange={onChangeIdea}\n                  type=\"text\" placeholder=\"読んだ時分（分単位）\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"readingtime\", {maxLength: 10,pattern: /^[0-9]+$/,})}\n                  />\n                     <span className=\"text-red-500 \">{errors.readingtime?.types?.maxLength && \"10文字以内で入力してください\"}<br/>\n                                                        {errors.readingtime?.types?.pattern && \"半角数字で入力してください\"}<br/></span>\n                </div>\n\n                  <div className=\"relative mt-4\">\n                    <label htmlFor=\"name\" className=\"text-base leading-7 text-blueGray-500\">Time</label>\n                    <input\n                    type=\"datetime-local\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                    {...register(\"date\", {\"required\":  true})}\n                    />\n                     <span className=\"text-red-500 \">{errors.date?.types?.required && \"Dateが入力されていません\"}<br/></span>\n                  </div> */}\n\n                <div className=\"flex my-6 mt-4\">\n                  <label className=\"flex items-center\">\n\n                  </label>\n                </div>\n                <button type=\"submit\"\n                className=\"w-full px-16 py-2 mr-2 text-base font-medium text-white transition duration-500 ease-in-out transform bg-yellow-300 border-yellow-300 rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:bg-yellow-400 \">\n                   SEND </button>\n                <p className=\"mx-auto mt-3 text-xs text-blueGray-500\"> memento mori..</p>\n              </div>\n              </form>\n          </ModalBody>\n          </ModalContent>\n\n      </Modal>\n    </>\n  )\n}\n\nexport default EditThoughtsModal\n","import axios from 'axios';\nimport React, { memo, useContext, useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { MainContext } from '../../providers/Provider';\n\ninterface Props{\n  title: string,\n  // indexDateArr: any\n}\n\nconst TotalLabelItem = memo((props: Props) => {\n  const { title } = props\n  const {booksIndex} = useContext(MainContext)\n  const { configAxios, railsUrl, userId, } = useContext(MainContext)\n\n  const styleJSX: React.CSSProperties ={\n    width: \"320px\"\n  }\n  // if (booksIndex.length !== 0){\n  //   const arr = booksIndex.map((i: Item) => {\n    interface Item{\n      id: number,\n      date: string,\n      booktitle: string,\n      author: string,\n      bookimage: string,\n      thoughts: any,\n      page?: number,\n      readingtime?: number,\n      // itemUrl: string,\n      // largeImageUrl: string\n\n\n    }\n    const getPage = (want : string):number => {\n      let sum: number = 0\n      if (booksIndex.length !== 0){\n      const today = `${new Date().getFullYear()}-${(`00${new Date().getMonth()+1}`).slice(-2)}`;\n      // today.getFullYear();\n      // console.log(today)\n        booksIndex.map((i: Item) => {\n          // console.log(i.date.slice(0,7)) //ここで月まで切り落としてるわけだけど...\n          if(i.date.slice(0,7) === today){\n            // console.log(\"OK?\")\n            // console.log(i.page)\n            if(want === \"page\"){\n              sum += Number(i.page)\n\n            }else{\n              sum += Number(i.readingtime)\n            }\n          }\n        })\n        // console.log(sum)\n      }\n      return sum\n    }\n    interface TotalDate {\n      date: string\n      page: number\n    }\n    const [total, setTotal] = useState<number>()\n    // let totalDate: TotalDate = {date: \"\", page: 0}\n    const getTotalPage = ()=> {\n      // let totalPage :number\n       axios.get(`${railsUrl}/restricted/thoughts/total/${userId}`,configAxios\n      ).then((res) => {\n        // console.log(res.data)\n        setTotal(res.data.page)\n        // console.log(totalDate[0].date)\n        // totalPage = totalMonth(res.data)\n      })\n      .catch(error => {\n      });\n      // const totalMonth = (td : TotalDate[]):number => {\n      //   let sum: number = 0\n      //   const today = `${new Date().getFullYear()}-${(`00${new Date().getMonth()+1}`).slice(-2)}`;\n\n      //   td.map((t: TotalDate) => {\n      //     if( t.date.slice(0,7) === today){\n      //       sum += t.page\n      //     }\n      //   })\n      //   return sum\n      // }\n\n    }\n    // getTotalPage()\n    // useEffect(getTotalPage,[])\n\n  // console.log(booksIndex)\n  return (\n    <div>\n      {/* <button onClick={getTotalPage}>tetetetet</button> */}\n      <div className=\"h-28 mb-5 bg-gray-100 cursor-default\" style={styleJSX}>\n        <div className=\"h-8 w-full bg-gray-900 text-white pl-2 text-base flex items-center\">{title} Total</div>\n        <div className=\"flex justify-between\">\n\n        <div className=\" mx-3\">\n          <div className=\"flex items-center\">\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"></path></svg>\n            <span className=\"text-base ml-1\">Total Page</span>\n          </div>\n          <div className=\"text-3xl p-2 text-center\">\n            {/* <CountUp end={} */}\n            <CountUp end={getPage(\"page\")}\n            duration={0.5}/>\n            <span className=\"text-base pl-1\">p</span>\n          </div>\n        </div>\n\n        <div className=\" mx-3\">\n          <div className=\"flex items-center\">\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n            <span className=\"text-base ml-1\">Total Minutes</span>\n          </div>\n          <div className=\"text-3xl p-2 text-center\">\n            <CountUp end={getPage(\"readingtime\")}\n            duration={0.5}/>\n            <span className=\"text-base pl-1\">min</span>\n            </div>\n        </div>\n\n        </div>\n        </div>\n    </div>\n  )\n})\n\nexport default TotalLabelItem\n","import axios from 'axios'\nimport React, { memo, useCallback, useContext, useEffect, useState } from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport { MainContext } from '../../providers/Provider'\n\n\n\nconst BookChartItem = memo(() => {\n  const { configAxios, railsUrl, userId, } = useContext(MainContext)\n\n  interface TotalData {\n    date: string\n    page: number\n  }\n\n  const [totalData, setTotalData] = useState<TotalData[]>([{date:\"\",page:-1}])\n  const getTotalPage = ()=> {\n    // let totalPage :number\n     axios.get(`${railsUrl}/restricted/thoughts/total/daily/${userId}`,configAxios\n    ).then((res) => {\n      console.log(res.data)\n      setTotalData(res.data)\n      // setTotal(res.data.page)\n      // console.log(totalDate[0].date)\n      // totalPage = totalMonth(res.data)\n    })\n    .catch(error => {\n    });\n  }\n  // const chartData = {\n  //   labels: [totalData[0].date], //てなってくると順番も保持してくれる配列に\n  //   // date配列 と page配列 に分けた方が良さそう\n  //   datasets: [\n  //     {\n  //       label: \"Monthly Page Total\",\n  //       backgroundColor: \"#123eff\",\n  //       borderColor: \"tarnsparent\",\n  //       hoverBackgroundColor: \"#443eff\",\n  //       data: [totalData[0].page]\n  //     }\n  //   ]\n  // }\n\n  // うーんusecallbackいるかな...\n  const calChartData = useCallback((): any => {\n    const test = \"aaa\"\n    const test2 = 12\n    // ここで、totalDataのlengthとか計算するのと\n    // date配列 と page配列 に分けてreturnさせる！！！\n    const dateArr : string[] = []\n    const pageArr : number[] = []\n    if (totalData !== null && totalData.length !== 0){\n      // ソートできたあああ！！！\n      totalData.sort((a,b)=> Number(new Date(a.date)) - Number(new Date(b.date))) //これでどうだろう？？？ あ、でもどっち順かわからなくない？？？\n      totalData.map((td) => {\n        // console.log(td.date)\n        dateArr.push(td.date)\n        // dateArr.push(\"aa\")\n        // dateArr = [...dateArr,td.date]\n        // console.log(td.page)\n        pageArr.push(td.page)\n        // pageArr = [...pageArr,td.page]\n      })\n      // ああああ！！！それぞれソートしたら、そりゃズレる！！！\n      // dateArr.sort()\n      // pageArr.sort()\n    }\n    const chartData = {\n      // よし！機能してる！！この方式でいこう！！！\n      labels: dateArr, //てなってくると順番も保持してくれる配列に\n      // labels: [totalData[0].date], //てなってくると順番も保持してくれる配列に\n      // date配列 と page配列 に分けた方が良さそう\n      datasets: [\n        {\n          label: \"Daily Total Page\",\n          backgroundColor: \"#ecc94b\",\n          borderColor: \"#443eff\",\n          // borderColor: \"#ffffff\",\n          hoverBackgroundColor: \"#443eff\",\n          borderWidth: 1,\n          // data: [totalData[0].page]\n          // よし！機能してる！！この方式でいこう！！！\n          data: pageArr\n        }\n      ]\n    }\n    return chartData\n  },[totalData])\n  // const chartData = {\n  //   labels: [totalData[0].date], //てなってくると順番も保持してくれる配列に\n  //   // date配列 と page配列 に分けた方が良さそう\n  //   datasets: [\n  //     {\n  //       label: \"Daily Page Total\",\n  //       backgroundColor: \"#123eff\",\n  //       borderColor: \"tarnsparent\",\n  //       hoverBackgroundColor: \"#443eff\",\n  //       data: [totalData[0].page]\n  //     }\n  //   ]\n  // }\n  useEffect(getTotalPage,[])\n  return (\n    <div>\n      <div className=\"h-full w-30 bg-white\">\n\n        <Bar data={calChartData}\n        height={300}/>\n      </div>\n    </div>\n  )\n})\n\nexport default BookChartItem\n","import React, { memo } from 'react'\nimport ReactPaginate from 'react-paginate';\nimport '../RightUp.scss';\n\ninterface Props{\n  viewPages: ViewPages\n  setViewPages: React.Dispatch<React.SetStateAction<ViewPages>>\n  wantPage: number\n  indexArray: Array<any>\n}\n\ninterface ViewPages {\n  startpage: number\n  endpage: number\n}\n\n\nconst BookPaginateItem = memo((props :Props) => {\n  const {viewPages, setViewPages,wantPage,indexArray} = props\n  // const {indexArray } = useContext(MainContext)\n  // よし、mapのsliceで動的に指定できるから、それを変化させる関数を作るだけでOKそう！！！\n\n  // 共通化したからpropsで設定number受け取る。テスト\n  // const proNum :number = 5\n\n  const changePages =  (e:{selected: number}) => {\n    console.log(`OKだ！！！${e.selected}`) //{selected: 0}\n    // console.log(\"clicked!!!!!\")\n    console.log(indexArray)\n\n    // まだこの、pageの判定の計算がめちゃくちゃだ...\n    const sp = (e.selected * (wantPage -1))+ e.selected\n    console.log(sp)\n\n    setViewPages({startpage: sp ,endpage:sp +wantPage})\n  }\n  return (\n    <>\n    <div className=\"w-56 mx-auto \">\n    <p className=\"text-base text-center mt-3 font-medium  cursor-default tracking-tight\">\n    {/* <p className=\"text-indigo-500 text-md font-medium cursor-default text-center\"> */}\n      Total\n      <span className=\"px-3 \">\n        {indexArray.length}\n\n      </span>\n      records</p>\n\n    </div>\n    <div\n    className=\"justify-center flex \"\n    >\n\n      <ReactPaginate\n        onPageChange={changePages} // これがページクリック時の関数みたい！\n        pageCount={indexArray.length/wantPage}\n        // pageCount={100}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={1}\n        previousLabel='<<'\n        nextLabel='>>'\n        containerClassName='flex justify-center flex-column w-56'\n        pageClassName='down-up h-5 w-5 bg-gray-900 text-white text-sm block m-auto\n        transition duration-500 ease-in-out transform hover:bg-yellow-400 text-center'\n        previousLinkClassName=\"pr-2\"\n        nextLinkClassName=\"pl-2\"\n        activeClassName=' bg-indigo-600'\n        />\n      </div>\n    </>\n  )\n})\n\nexport default BookPaginateItem\n","import React, { memo, useContext } from 'react'\n// import { MainContext } from '../providers/Provider';\nimport './Index.scss';\n\n\ninterface Props {\n  viewPages: ViewPages\n  indexArray: Array<any>\n  onClickThoughtCreate: (item: Item)=>void\n  onClickTargetDelete: (item: Item)=>void\n\n}\n\ninterface ViewPages {\n  startpage: number\n  endpage: number\n}\n\ninterface Item{\n  id: number,\n  date: string,\n  booktitle: string,\n  author: string,\n  bookimage: string,\n  thoughts: any,\n  page?: number,\n  readingtime?: number,\n}\n\n\n\n\n\nconst IndexItem = memo((props:Props ) => {\n  // const { configAxios, booksIndex, setBooksIndex, loginFlag, setLoginFlag, railsUrl, userId, token,editIsOk, SetEditIsOk,onClickGetIndexRails,showToast } = useContext(MainContext)\n  const {viewPages,indexArray,onClickThoughtCreate,onClickTargetDelete} =props\n  // コンポーネント化！できた！！\n\n\n  console.log(\"レンダリング\")\n  return (\n    <>\n     {indexArray.slice(viewPages.startpage, viewPages.endpage).map((item: Item) => {\n    // const dateStr = new Date(item.date).toDateString()\n\n    return(\n      <div className=\"flex items-center justify-center scrolled\" >{/*id=\"scrolled\"*/}\n      {/* <div className=\"flex items-center justify-center\"> */}\n\n      <div className=\"my-4 mx-auto\n      flex items-center justify-center\">\n\n\n  <div key={item.id} className=\"overflow-hidden shadow-lg rounded-lg cursor-pointer ml-1 hover:opacity-85\n  md:w-4/5 w-72\"\n  //  style={{width: \"800px\"}}\n   >\n      <div className=\"md:flex\">\n\n        <div className=\"h-40 md:h-full md:max-h-full md:w-2/5 cursor-default bg-gray-100\">\n          {/* <a href={item.Item.itemUrl} target=\"_blank\" rel=\"noopener noreferrer\"> */}\n          <img alt=\"NO Image...\" src={item.bookimage} className=\" max-h-full w-80 object-scale-down md:object-cover object-center\"/>\n\n          {/* </a> */}\n\n        </div>\n\n\n        <div className=\"h-full  relative\"\n        style={{width: \"550px\"}}\n        >\n\n          <div className=\"h-80 w-72 ml-2 md:m-0 bg-white dark:bg-gray-800 md:w-full  p-4 cursor-default flex justify-between flex-col\">\n              <div className=\"h-24\">\n              <p className=\"text-indigo-500 text-md font-medium\">\n                  Book Title\n              </p>\n              <div className=\"mb-2 md:mb-0  p-2  md:w-full\">\n\n                  <p className=\"break-normal text-gray-800 dark:text-white text-sm font-medium mb-2\">\n                  { item.booktitle }\n                  </p>\n                  <p className=\"text-gray-400 dark:text-gray-300 font-light text-sm\">\n                  { item.author }\n                  </p>\n              </div>\n              </div>\n              <div className=\"h-52\">\n                  <p className=\"text-indigo-500 text-md font-medium\">\n                      Your Thought\n                  </p>\n                  <div className=\"flex flex-col justify-between h-44 p-2\">\n                    <div className=\" text-gray-800 dark:text-white text-md font-medium mb-8 break-all\">\n                    { item.thoughts }\n                    </div>\n                    <div>\n\n                      <div className=\"flex  mb-1\">\n                      <p className=\"text-gray-800 dark:text-white text-base font-medium\">\n                      { item.page }<span className=\"text-yellow-400  text-xs pl-1 pr-4\">Page</span>\n                      </p>\n                      <p className=\"text-gray-800 dark:text-white text-base font-medium\">\n                      { item.readingtime }<span className=\"text-yellow-400 text-xs pl-1\">Minutes (Reading Time)</span>\n                      </p>\n                      </div>\n                      <p className=\" text-gray-400 dark:text-gray-300 font-light text-md\">\n                      { item.date }\n                      {/* { item.date } */}\n                      {/* { (item.date).toDateString() } */}\n                      </p>\n                    </div>\n\n                  </div>\n              </div>\n          </div>\n          {/* ここか！！Editボタン！！ 何を送ってるかというと.... */}\n              <div onClick={() => onClickThoughtCreate(item)}\n              //onClick={() => onClickTargetEdit(item)}\n               className=\"mr-1 object-cover rounded-full bg-indigo-600 h-10 w-10 hover:opacity-80\n                absolute bottom-6 left-44 md:left-auto md:bottom-8 md:right-20 \"\n                // style={{right: \"300px\"}}\n                >\n              <svg className=\"text-white object-cover p-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path></svg>\n\n              </div>\n\n               <div onClick={() => onClickTargetDelete(item)}\n               className=\"object-cover rounded-full bg-red-600 h-10 w-10 hover:opacity-80\n                absolute bottom-6 left-56 md:left-auto md:bottom-8 md:right-8 \"\n                // style={{right: \"300px\"}}\n                >\n                  <svg className=\"text-white object-cover p-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path></svg>\n\n              </div>\n        </div>\n      </div>\n  </div>\n  </div>\n      </div>\n\n        );\n  })}\n    </>\n  )\n})\n\nexport default IndexItem\n","import React, { useContext, useEffect, useState } from 'react'\nimport { AlertDialog, AlertDialogBody, AlertDialogCloseButton, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogOverlay, Button, useDisclosure } from '@chakra-ui/react'\nimport { MainContext } from '../../../providers/Provider'\nimport axios from 'axios'\n\n\n\n\ninterface Props {\n  deleteId: number\n  daialogFlag: boolean\n  setDaialogFlag: React.Dispatch<React.SetStateAction<boolean>>\n}\n\n\n\nconst DeleteThoughtsDialog = (props :Props) => {\n  const { deleteId,daialogFlag,setDaialogFlag } = props\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const cancelRef = React.useRef<any>()\n  const { configAxios,railsUrl,onClickGetIndexRails,showToast } = useContext(MainContext)\n\n  const openChange = () => {\n    if (daialogFlag){\n      onOpen()\n    }\n    else {\n      // onClose()\n      // SetCountIsOk(false)\n\n    }\n  }\n  const isOpenChange = () => {\n    if (!isOpen){\n      setDaialogFlag(false)\n    }\n  }\n  useEffect(openChange,[daialogFlag])\n  useEffect(isOpenChange,[isOpen])\n\n\n\n\n\n\n  const onClickDeleteRails = (deleteId: number) =>{\n    axios.delete(`${railsUrl}/restricted/thoughts/${deleteId}`,configAxios).then((res) => {\n      //  setTargetEditThoughts(\"\")\n\n     }).then(()=>{\n       // 削除完了のフラッシュメッセージ出す！！！！！！！\n       // あとはreload\n       onClickGetIndexRails()\n       onClose()\n       showToast(\"削除しました\")\n     })\n     .catch(error => {\n       // console.error(error);\n     });\n\n}\n\n  return (\n<>\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogOverlay />\n\n        <AlertDialogContent>\n          <AlertDialogHeader>It's DELETE?</AlertDialogHeader>\n          <AlertDialogCloseButton />\n          <AlertDialogBody>\n            Are you sure you want to delete it?\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              No\n            </Button>\n            <Button colorScheme=\"red\" ml={3} onClick={() => onClickDeleteRails(deleteId)}\n            >\n              Yes\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n      </>\n  )\n}\n\nexport default DeleteThoughtsDialog\n","import { AlertDialog, AlertDialogBody, AlertDialogCloseButton, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogOverlay, Button, Tooltip, useDisclosure } from '@chakra-ui/react'\nimport axios from 'axios'\nimport React, { ChangeEvent, memo, useContext, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n// import './Index.scss';\nimport './RightUp.scss';\nimport { MainContext } from '../providers/Provider'\n// import IndexItems from './IndexItems'\nimport BookCalendar from './organisms/BookCalendar'\nimport EditThoughtsModal from './organisms/index/EditThoughtsModal'\n\nimport TotalLabelItem from './organisms/TotalLabelItem'\nimport BookChartItem from './organisms/BookChartItem'\nimport TopButton from './atoms/TopButton'\nimport BookPaginateItem from './organisms/BookPaginateItem'\nimport IndexItem from './IndexItem'\nimport DeleteThoughtsDialog from './organisms/index/DeleteThoughtsDialog'\n\n\nexport const Index = memo(() => {\n  const { configAxios, booksIndex, setBooksIndex, loginFlag, setLoginFlag, railsUrl, userId, token,editIsOk, SetEditIsOk,onClickGetIndexRails,showToast } = useContext(MainContext)\n  // const { booksIndex }:{booksIndex: Item[]} = useContext(MainContext)\n\n  // const [targetEditItem, setTargetEditItem] = useState<TargetEditItem>({id: 0,date: \"\", author: \"\",booktitle: \"\", bookimage: \"\", thoughts: \"\"})\n  // const [targetEditThoughts, setTargetEditThoughts] = useState<string>()\n\n\n\n  // loginFlag ? onClickGetIndexRails() : console.log(\"home画面に戻す処理にする\") ;\n  const [editThought, SetEditThought] = useState<Item>({id: -1, date: \"\",booktitle:\"\",author:\"\",bookimage:\"\",\n                                                                        thoughts:\"\",page: -1,readingtime: -1,})\n  const onClickThoughtCreate = (t: Item) =>{\n    if (!editIsOk){\n      SetEditIsOk(true)\n\n    }else{\n      SetEditIsOk(false)\n\n    }\n    SetEditThought(t)\n    // ここで処理すべきものだったからか！？！？\n    // const Target = {title: c.booktitle, author: c.author, imageUrl: c.bookimage}\n    // setTargetItem(Target)\n\n  }\n// テスト！！！！！\n\nconst [ daialogFlag, setDaialogFlag ] = useState(false)\n// テスト！！！！！\n\n\n  const [deleteId, setDeleteId] = useState<number>(0)\n  const onClickTargetDelete =  (e: Item)  => {\n    // onOpen() //ここを...変えれば良さそう！？\n\n    (() => {\n      // onOpen()\n      // ここでonOpenじゃなくて、propsとして渡すのをtrueにしたいんだから...\n      // // 即時関数！！！\n      // (() =>{\n\n      // })()\n      if (!daialogFlag){\n        setDaialogFlag(true)\n\n      }else{\n        setDaialogFlag(false)\n\n      }\n      // setFinishId(c.id)\n    })()\n\n\n    // うーん....削除しちゃうなあ....\n    // console.log(e.id)\n\n    setDeleteId(e.id)\n    // const deleteId = e.id\n\n    // onClickDeleteRails(deleteId);\n  }\n\n\n  const fileDownload = require('js-file-download');\n\n  const onClickGetCsvRails = () => {\n    axios.get(`${railsUrl}/restricted/thoughts/csv/${userId}`,\n    {headers: {\n      Authorization: `Bearer ${token()}`,\n    },\n    responseType: \"blob\"\n  },\n    /* {headers: { 'X-Requested-With': 'XMLHttpRequest'}, withCredentials: true,\n     params: {user_id: userId}} */\n    ).then((res) => {\n      const blob = new Blob([res.data], {\n        type: res.data.type\n      });\n      // console.log(res)\n      // fileDownload(res.data, \"bookIndex.csv\")\n      fileDownload(blob, \"index.csv\")\n    })\n    .catch(error => {\n      // console.error(error);\n    });\n\n  }\n  const history = useHistory()\n\n  useEffect(() => onClickGetIndexRails(), [])\n  useEffect(() => onClickGetIndexRails(), [userId])\n  useEffect(() => checkAuth(), [loginFlag])\n\n  const checkAuth = () => {\n    !loginFlag && history.push(\"/\")\n  }\n\n\n  interface Item{\n    id: number,\n    date: string,\n    booktitle: string,\n    author: string,\n    bookimage: string,\n    thoughts: any,\n    page?: number,\n    readingtime?: number,\n    // itemUrl: string,\n    // largeImageUrl: string\n\n\n  }\n\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const cancelRef = React.useRef<any>()\n\n  useEffect(() => calendarDate(),[booksIndex])\n  // useEffect(() => calendarDate(),[])\n\n  // 無限レンダリング注意！！！！\n  // 無限レンダリング注意！！！！\n  // 無限レンダリング注意！！！！\n  // 無限レンダリング注意！！！！\n  // 無限レンダリング注意！！！！\n  // 無限レンダリング注意！！！！\n  // 無限レンダリング注意！！！！\n  // これが原因だわuseEffect(() => onClickGetIndexRails(),このディペンシーズで、ずーーーーーーーっっとサーバーに通信し続けて、[booksIndex])\n  // で、コンポーネントが無限レンダリングになってた。\n  useEffect(() => onClickGetIndexRails(),[])\n\n  const calendarDate = () => {\n    // let arr: [string]\n    if (booksIndex.length !== 0){\n      const arr = booksIndex.map((i: Item) => {\n        const arrangDate  = new Date(i.date)\n        return(`${arrangDate.getFullYear()}${arrangDate.getMonth()}${arrangDate.getDate()}`)\n      })\n\n      setIndexDateArr(arr)\n    }\n  }\n  const [indexDateArr, setIndexDateArr] = useState([])\n\n\n\n\n\n  // #scrolled\n\n  const cb = (entris:any, observer:any) => {\n    // console.log(\"intersecting!!!?\")\n    entris.forEach((entry:any) => {\n      if(entry.isIntersecting) {\n        // console.log(\"inview!!\")\n        // console.log(entry.target)\n        entry.target.classList.add(\"viewing\")\n        // entry.target.classList.remove(\"invisible\")\n\n      }else{\n        // console.log(\"outview!!\")\n        // entry.target.classList.add(\"invisible\")\n\n\n        // entry.target.classList.remove(\"testclass\") //これつけるとズーーーっと出たり入ったりする\n        // つまり、一覧だから、初回に入るときにエフェクトがあればいいかな？と思う\n        // 見づらいかなって\n\n      }\n    })\n  }\n  const options = {\n    // rootMargin: \"-300px  0px\"\n  }\n  const io = new IntersectionObserver(cb, options)\n  if(document.querySelector('.scrolled')){\n    const els = document.querySelectorAll('.scrolled')\n    els.forEach(el => io.observe(el))\n    // io.observe(document.querySelector('.scrolled')!)\n\n  }\n\n  const wantPageInit = 5\n  const [viewPages, setViewPages] = useState<ViewPages>({startpage: 0 ,endpage: wantPageInit})\n  interface ViewPages {\n    startpage: number\n    endpage: number\n  }\n  return(\n    <>\n      <>\n      <div className=\"\">\n        {/* <BookPaginateItem\n        viewPages={viewPages} setViewPages={setViewPages}/> */}\n        {/* <button onClick={getTotalTest} >get total test!!!!</button> */}\n        <h1 className=\"right-up my-10 font-black tracking-tighter text-black hover:text-indigo-700 text-3xl title-font text-center cursor-default\n          transition duration-500 ease-in-out transform\n        \">Awesome YOUR THOUGHTS!\n                  <div className=\"mt-3 ml-1 tracking-tighter text-gray-400  text-base font-medium\">Enjoy Books now!</div>\n                  </h1>\n                  <div className=\"mb-3\">\n<nav className=\"flex flex-wrap items-center justify-center text-base md:ml-auto md:mr-auto\">\n<Tooltip label=\"インデックスをリロードします！\" placement=\"top\"\n                bg=\"gray.600\" closeDelay={500}>\n                  <div onClick={onClickGetIndexRails}\n                   className=\"down-up flex items-center cursor-pointer mr-5 hover:text-yellow-400 transition duration-500 ease-in-out transform\">\n                    <svg className=\" w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path></svg>\n                    <div className=\"px-4 py-1 mr-1 text-base text-blueGray-500  rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 \">\n                      Reload</div>\n\n                  </div>\n                  </Tooltip>\n\n                  <Tooltip label=\"CSVをダウンロードします！\" placement=\"top\"\n                bg=\"gray.600\" //defaultIsOpen\n                closeDelay={500}>\n                  <div onClick={onClickGetCsvRails}\n                  className=\"down-up flex items-center cursor-pointer mr-5 hover:text-yellow-400 transition duration-500 ease-in-out transform\">\n                  <svg className=\"w-6 h-6 \" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                  <div className=\"px-4 py-1 mr-1 text-base text-blueGray-500  rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 \">\n                    Get CSV</div>\n\n                  </div>\n                  </Tooltip>\n                </nav>\n                  </div>\n                  <BookPaginateItem\n        viewPages={viewPages}\n        setViewPages={setViewPages}\n        wantPage={wantPageInit}\n        // テスト！！<- 共通化できた！！！\n        indexArray={booksIndex}\n        />\n      </div>\n        </>\n\n\n      <div className=\"md:flex justify-between flex-row-reverse\">\n      <div className=\"text-xs w-80 md:mr-6 mx-auto\">\n          {/* <TotalLabelItem title=\"weekly\" indexDateArr={indexDateArr}/> */}\n          <TotalLabelItem title=\"Monthly\"\n          //  indexDateArr={indexDateArr}\n          />\n          <div className=\"mb-5\">\n          <BookChartItem />\n\n          </div>\n          <BookCalendar indexDateArr={indexDateArr}/>\n        </div>\n\n      <ul>\n\n        <div className=\"\">\n        <EditThoughtsModal thought={editThought}/>\n\n        </div>\n          {/* INDEX ITEM コンポーネント化のテスと！ */}\n          {/* できたあああああ！！！ */}\n          <IndexItem\n            viewPages={viewPages}\n            indexArray={booksIndex}\n            onClickThoughtCreate={onClickThoughtCreate}\n            onClickTargetDelete={onClickTargetDelete}\n          />\n\n\n      </ul>\n\n      </div>\n      <TopButton />\n        {/* よし！deleteダイアログもコンポーネント化できた！！ */}\n      <DeleteThoughtsDialog\n        deleteId={deleteId}\n        daialogFlag={daialogFlag}\n        setDaialogFlag={setDaialogFlag}\n      />\n      {/* <>\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogOverlay />\n\n        <AlertDialogContent>\n          <AlertDialogHeader>It's DELETE?</AlertDialogHeader>\n          <AlertDialogCloseButton />\n          <AlertDialogBody>\n            Are you sure you want to delete it?\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              No\n            </Button>\n            <Button colorScheme=\"red\" ml={3} onClick={() => onClickDeleteRails(deleteId)}>\n              Yes\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n      </> */}\n    </>\n  )\n})\n","import React, { useContext, useEffect } from 'react'\nimport { AlertDialog, AlertDialogBody, AlertDialogCloseButton, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogOverlay, Button, Tooltip, useDisclosure } from '@chakra-ui/react'\nimport { MainContext } from '../../../providers/Provider'\nimport axios from 'axios'\n\ninterface Props {\n  finishId: number\n  // isOk: boolean\n  // SetCountIsOk: React.Dispatch<React.SetStateAction<boolean>>\n}\n\n\nconst CountupItem = (props :Props) => {\n  // このonOpenをどうするか...なんだけど、これをpropsでもらってきて判定したいわけだよね？？？\n  // propsからbooleanもらう？？？\n  const { finishId} = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const cancelRef = React.useRef<any>()\n  // このコンポーネントで何を実現させたいのか？？？？\n  // この切り離しができると他のモーダルも使えるようになるのだ....\n\n  // まず汚くてもいいから、作ってみようか！！！\n  // でonOpenの判定はpropsで直接もらうとブッキングしちゃうから\n  // （そもそもこのブッキングをどうにかしたいがためのコンポーネント分割）\n\n  const { configAxios, railsUrl, countIsOk, SetCountIsOk, userId,bookCollections, setBookCollections } = useContext(MainContext)\n  const onClickFinishCountUp = (finishId :number) => {\n    onClose()\n    axios.get(`${railsUrl}/restricted/books/finish/${finishId}`,configAxios\n    ).then((res) => {\n      console.log(res)\n\n      onClickGetCollection() // ここどうしようかな。このメソッドをプロバイダーかな？？\n\n    })\n    .catch(error => {\n      // なんか処理\n    })\n  }\n\n  const onClickGetCollection = () => {\n    axios.get(`${railsUrl}/restricted/books/${userId}`,configAxios\n    ).then((res) => {\n      console.log(res)\n      // setBooksIndex(() => res.data.books)\n\n      if (res.data !== null){\n        setBookCollections(() => res.data) //のちにres.data.booksとしてgoから返却させる！！！！\n      }\n\n    })\n    .catch(error => {\n      // console.error(error);\n    });\n  }\n\n\n  // この辺りが、モーダルとか開くなどのロジック部分！！！\n  const openChange = () => {\n    if (countIsOk){\n      onOpen()\n    }\n    else {\n      // onClose()\n      // SetCountIsOk(false)\n\n    }\n  }\n  const isOpenChange = () => {\n    if (!isOpen){\n      SetCountIsOk(false)\n    }\n  }\n\n  useEffect(openChange,[countIsOk])\n  useEffect(isOpenChange,[isOpen])\n  return (\n    <div>\n       <>\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogOverlay />\n\n        <AlertDialogContent>\n          <AlertDialogHeader>Oh!! You finished THE BOOK!?!?</AlertDialogHeader>\n          <AlertDialogCloseButton />\n          <AlertDialogBody>\n            you want to finish up?\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              No\n            </Button>\n            <Button colorScheme=\"red\" ml={3} onClick={() => onClickFinishCountUp(finishId)}>\n              Yes\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n      </>\n    </div>\n  )\n}\n\nexport default CountupItem\n","import React, { useContext, useEffect } from 'react'\nimport { useDisclosure } from '@chakra-ui/react'\nimport { MainContext } from '../../../providers/Provider'\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from '@chakra-ui/react'\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\ninterface Props {\n  collection : Collection\n\n}\n\ninterface Collection {\n  id: number\n  booktitle: string\n  author: string\n  bookimage: string\n  bookurl: string\n  finishcount: number\n  date: string\n  createdat: string\n  updatedat: string\n  userid: number\n}\n\nconst CreateThoughtsModal = (props: Props) => {\n  // collection画面から、thoughtを新しく入力したいよ！ってことだよ！！！\n  const {collection} = props\n  // 何が必要かな？？？\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const cancelRef = React.useRef<any>()\n  const { onClickPostRails,targetItem,setTargetItem,createIsOk, SetCreateIsOk } = useContext(MainContext);\n   // React Hook Formのところ-------------------------------\n   const { register, handleSubmit, formState: {errors} , reset } = useForm<FormStatus>({criteriaMode: \"all\", shouldFocusError: true})\n   const onSubmit: SubmitHandler<FormStatus> = (data) => {\n\n     console.log(data.date)\n    //  ここでsetTargetItem で下準備する！！\n    // setTargetItem(() => ({title: \"\", author: \"\", imageUrl: \"\",itemUrl: \"\"}))\n    //このsetをレンダリングと共にすればいいと思う（つまりここの処理だと遅くない？ってこと。）\n    const Target = {title: collection.booktitle, author: collection.author, imageUrl: collection.bookimage}\n    setTargetItem(Target)\n    //  const err =  onClickPostRails(data) // railsの方で引数取るようにする...\n    // console.log(err)\n     onClickPostRails(data) // railsの方で引数取るようにする...\n     //で送ったらformstatusリセットだろうなああ....\n    //  reset(data)\n     reset() //ああ余計な引数を取るから、resetされなかったんだ...あああ...\n     onClose()\n    //  ん？？？交互にエラーになってる....\n\n     // ブランクにする処理の方が早いから、エラーになってるぽいなあ...\n      // setTargetItem({title: \"\", author: \"\", imageUrl: \"\",itemUrl: \"\"})\n      // SetCreateIsOk(false)\n  };\n\n\n  interface FormStatus{\n    thoughts: string,\n    date: string,\n    page: number,\n    readingtime: number,\n\n  }\n\n\n  // この辺りが、モーダルとか開くなどのロジック部分！！！\n  const openChange = () => {\n    if (createIsOk){\n      onOpen()\n    }\n    else {\n      // onClose()\n      // SetCountIsOk(false)\n\n    }\n  }\n  const isOpenChange = () => {\n    if (!isOpen){\n      SetCreateIsOk(false)\n    }\n  }\n\n  useEffect(openChange,[createIsOk])\n  useEffect(isOpenChange,[isOpen])\n  // useEffect(()=>{},[targetItem])\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose} motionPreset=\"slideInBottom\">\n        <ModalOverlay />\n          <ModalContent>\n          <ModalCloseButton />\n          <ModalHeader>full in your thought!!</ModalHeader>\n          {/* <h2 className=\"mb-3 text-xs font-semibold tracking-widest text-black uppercase title-font\">full in your thought </h2> */}\n\n      {/* ここの src={collection.bookimage} はこれでいいのか！！ なぜなら、SEND押した後に、collectionのbook情報を、targetItemにセットするから！*/}\n          <img alt=\"NO IMAGE\" src={collection.bookimage} className=\"object-contain h-72\"/>\n          <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"flex flex-col w-full mx-auto mb-8  md:mt-0\">\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Thought</label>\n                  <textarea //value={idea} // onChange={onChangeIdea}\n                   placeholder=\"感じたこと\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"thoughts\", {\"required\":  true})}\n                  />\n                     <span className=\"text-red-500 \">{errors.thoughts?.types?.required && \"Thoughtが入力されていません\"}<br/></span>\n                </div>\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Page</label>\n                  <input //value={idea} // onChange={onChangeIdea}\n                  type=\"text\" placeholder=\"ページ数\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"page\", {maxLength: 10,pattern: /^[0-9]+$/,})}\n                  />\n                     <span className=\"text-red-500 \">{errors.page?.types?.maxLength && \"10文字以内で入力してください\"}<br/>\n                                                        {errors.page?.types?.pattern && \"半角数字で入力してください\"}<br/></span>\n                </div>\n                <div className=\"relative mt-4\">\n                  <label htmlFor=\"text\" className=\"text-base leading-7 text-blueGray-500\">Reading Time</label>\n                  <input //value={idea} // onChange={onChangeIdea}\n                  type=\"text\" placeholder=\"読んだ時分（分単位）\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                  {...register(\"readingtime\", {maxLength: 10,pattern: /^[0-9]+$/,})}\n                  />\n                     <span className=\"text-red-500 \">{errors.readingtime?.types?.maxLength && \"10文字以内で入力してください\"}<br/>\n                                                        {errors.readingtime?.types?.pattern && \"半角数字で入力してください\"}<br/></span>\n                </div>\n\n                {/* {!indexFlag && //これはいらないな */}\n                  <div className=\"relative mt-4\">\n                    <label htmlFor=\"name\" className=\"text-base leading-7 text-blueGray-500\">Time</label>\n                    <input\n                    type=\"datetime-local\" className=\"border-2 border-gray-200 w-full px-4 py-2 mt-2 text-base text-black transition duration-500 ease-in-out transform border-transparent rounded-lg bg-blueGray-100 focus:border-blueGray-500 focus:bg-white focus:outline-none focus:shadow-outline focus:ring-2 ring-offset-current ring-offset-2\"\n                    {...register(\"date\", {\"required\":  true})}\n                    />\n                     <span className=\"text-red-500 \">{errors.date?.types?.required && \"Dateが入力されていません\"}<br/></span>\n                  </div>\n\n                {/* } */}\n                <div className=\"flex my-6 mt-4\">\n                  <label className=\"flex items-center\">\n\n                  </label>\n                </div>\n                <button type=\"submit\"\n                className=\"w-full px-16 py-2 mr-2 text-base font-medium text-white transition duration-500 ease-in-out transform bg-yellow-300 border-yellow-300 rounded-md focus:shadow-outline focus:outline-none focus:ring-2 ring-offset-current ring-offset-2 hover:bg-yellow-400 \">\n                   SEND </button>\n                <p className=\"mx-auto mt-3 text-xs text-blueGray-500\"> memento mori..</p>\n              </div>\n              </form>\n          </ModalBody>\n          </ModalContent>\n\n      </Modal>\n    </>\n  )\n}\n\nexport default CreateThoughtsModal\n","import axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { MainContext } from '../../../providers/Provider';\n\ninterface Props {\n  collerctionBookid: number\n  finishcount: number\n}\n\nconst FinishDetail = (props: Props) => {\n  const { configAxios, railsUrl, userId, } = useContext(MainContext)\n  const { collerctionBookid, finishcount } = props\n\n  const [finishLogs, SetFinishLogs] = useState<Finish[]>([{id: -1,count: -1, finishdate: \"\", createdat: \"\", updatedat: \"\", bookid: -1, userid: -1}])\n\n  const getFinishDetail = ()=> {\n     axios.get(`${railsUrl}/restricted/finishes/${userId}`,configAxios\n    ).then((res) => {\n      console.log(res.data)\n      // setTotal(res.data.page)\n      // console.log(totalDate[0].date)\n      // totalPage = totalMonth(res.data)\n      SetFinishLogs(res.data)\n    })\n    .catch(error => {\n    });\n  }\n\n  interface Finish {\n    id: number\n    count: number\n    finishdate: string\n    createdat: string\n    updatedat: string\n    bookid: number\n    userid: number\n\n\n  }\n  const [dayArr, setDayArr] = useState<Finish[]>()\n  const arrangeLogs = () => {\n    // let sum: number = 0\n    let arr: Finish[]\n    if (finishLogs !== null && finishLogs.length !== 0){\n      finishLogs.map((f: Finish) => {\n        if(f.bookid === collerctionBookid){\n          // arr.push(f)\n          console.log(f)\n        }\n      })\n      // setDayArr(arr!)\n    }\n  }\n\n  useEffect(getFinishDetail,[])\n  return (\n    <>\n    {/* <button onClick={arrangeLogs}>tetetete</button> */}\n      <p className=\"text-gray-800 dark:text-white  font-medium mb-2\">\n                     <span className=\"mr-2\">\n                      <span className=\"mr-3\">\n                      読破合計\n\n                      </span>\n                      <span className=\"mr-1\">\n                      {finishcount}\n\n                      </span>\n                      回\n\n\n                     </span>\n                     {/* { c.finishcount }回 */}\n                     {finishLogs.length !== 0 &&\n                      <div className=\"text-sm\">\n                        {\n                          finishLogs.map((f: Finish) => {\n                            if(f.bookid === collerctionBookid && f.count !== 0){\n                              // arr.push(f)\n                              console.log(f)\n                              return(\n                              <div key={f.id} className=\"flex\">\n                                <p className=\"mr-3 flex\">\n                                  <p className=\"w-4\">\n                                  {f.count}\n\n                                  </p>\n                                  回目\n\n                                </p>\n                                <p className=\" text-gray-400 dark:text-gray-300 font-light text-md\">\n                                  <span className=\"mr-1\">\n                                  読破日\n\n                                  </span>\n                                  <span>\n                                  {f.finishdate}\n\n                                  </span>\n                                </p>\n                              </div>)\n                            }\n                          })\n                        }\n                      </div>\n                     }\n\n      </p>\n    </>\n  )\n}\n\nexport default FinishDetail\n","import axios from 'axios';\nimport React, { memo, useContext, useEffect, useState } from 'react'\nimport { MainContext } from '../providers/Provider';\nimport { Accordion, AccordionButton, Box, AccordionIcon, AccordionItem, AccordionPanel } from '@chakra-ui/react'\nimport { AlertDialog, AlertDialogBody, AlertDialogCloseButton, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogOverlay, Button, Tooltip, useDisclosure } from '@chakra-ui/react'\nimport { useHistory } from 'react-router';\nimport CountupItem from './organisms/collections/CountupItem';\nimport CreateThoughtsModal from './organisms/collections/CreateThoughtsModal';\nimport FinishDetail from './organisms/collections/FinishDetail';\nimport TopButton from './atoms/TopButton'\nimport BookPaginateItem from './organisms/BookPaginateItem';\nimport './RightUp.scss';\nimport Confetti from 'react-confetti'\n\nconst Collection = memo(() => {\n\n  // まずuseEffectで同じタイトルだけで、新しい配列を作る\n  // ...てなってくるとさ、BookテーブルとThoughtテーブルに分けた方が良さそう....\n  // うん、それだな。\n  // 分けたよ！！！！！！テーブル！！！！！う！！！！\n  // つまりブックの情報だけ返して欲しいのか。\n  // URL /books/のgetをこのcollectionに使いたいな。\n  // 違ったわ、現状使ってるのはPOSTだわ。\n  // つまり、とりあえず/books/のgetしよ\n  const { configAxios, railsUrl, userId,loginFlag ,countIsOk, SetCountIsOk,bookCollections, setBookCollections,\n    createIsOk, SetCreateIsOk,setTargetItem } = useContext(MainContext)\n\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const cancelRef = React.useRef<any>()\n  interface Collection {\n    id: number\n    booktitle: string\n    author: string\n    bookimage: string\n    bookurl: string\n    finishcount: number\n    date: string\n    createdat: string\n    updatedat: string\n    userid: number\n  }\n  useEffect(() => checkAuth(), [loginFlag])\n  const history = useHistory()\n  const checkAuth = () => {\n    !loginFlag && history.push(\"/\")\n  }\n\n  useEffect(() => {\n    axios.get(`${railsUrl}/restricted/books/${userId}`,configAxios\n    ).then((res) => {\n      console.log(res)\n      // setBooksIndex(() => res.data.books)\n\n      if (res.data !== null){\n        setBookCollections(() => res.data) //のちにres.data.booksとしてgoから返却させる！！！！\n      }\n\n    })\n    .catch(error => {\n      // console.error(error);\n    });\n  },[])\n\n  const [finishId, setFinishId] = useState<number>(-1)\n\n\n\n\n  const onClickFinished = (c :Collection) => {\n    // onOpen()\n    // ここでonOpenじゃなくて、propsとして渡すのをtrueにしたいんだから...\n    // // 即時関数！！！\n    // (() =>{\n\n    // })()\n    if (!countIsOk){\n      SetCountIsOk(true)\n\n    }else{\n      SetCountIsOk(false)\n\n    }\n    setFinishId(c.id)\n  }\n\n  const [createCollection, SetCreateCollection] = useState<Collection>({id: -1,booktitle:\"\",author:\"\",bookimage:\"\",\n                                                                        bookurl:\"\",finishcount: -1,date:\"\",createdat: \"\", updatedat:\"\",userid: -1})\n  const onClickThoughtCreate = (c :Collection) => {\n    if (!createIsOk){\n      SetCreateIsOk(true)\n\n    }else{\n      SetCreateIsOk(false)\n\n    }\n    SetCreateCollection(c)\n    // ここで処理すべきものだったからか！？！？\n    const Target = {title: c.booktitle, author: c.author, imageUrl: c.bookimage}\n    setTargetItem(Target)\n    // setFinishId(c.id)\n  }\n  // const onClickFinishCountUp = (finishId :number) => {\n  //   onClose()\n  //   axios.get(`${railsUrl}/restricted/books/finish/${finishId}`,configAxios\n  //   ).then((res) => {\n  //     console.log(res)\n  //     // setBooksIndex(() => res.data.books)\n  //     onClickGetCollection()\n  //     // if (res.data !== null){\n  //     //   setBookCollections(() => res.data) //のちにres.data.booksとしてgoから返却させる！！！！\n  //     // }\n\n  //   })\n  //   .catch(error => {\n  //     // console.error(error);\n  //   })\n  // }\n\n  // ページネーションの設定！！！\n  // 変数化 共通化って便利いいいいいいいいい！！！\n  const wantPageInit = 10\n  const [viewPages, setViewPages] = useState<ViewPages>({startpage: 0 ,endpage: wantPageInit})\n  interface ViewPages {\n    startpage: number\n    endpage: number\n  }\n\n\n  return (\n    <div>\n      {/* <Confetti\n        recycle={false}\n      /> */}\n        {/* <BookPaginateItem\n        viewPages={viewPages}\n        setViewPages={setViewPages}\n        wantPage={5}/> */}\n      {/* <button onClick={onClickGetCollection}>get collection!!!</button> */}\n      <h1 className=\"right-up my-10 font-black tracking-tighter text-black hover:text-indigo-700 text-3xl title-font text-center cursor-default\n          transition duration-500 ease-in-out transform\n        \">Your Book Collections!\n                  <div className=\"mt-3 ml-1 tracking-tighter text-gray-400  text-base font-medium\">Enjoy Books now!</div>\n                  </h1>\n                  <BookPaginateItem\n        viewPages={viewPages}\n        setViewPages={setViewPages}\n        wantPage={wantPageInit}\n        indexArray={bookCollections}\n        />\n      {bookCollections.length !== 0 &&\n        <>\n          <div className=\"text-center\">\n\n\n          {bookCollections.slice(viewPages.startpage, viewPages.endpage).map((c :Collection)=> {\n            return(\n              // <div className=\"flex items-center justify-center scrolled\" >\n              <div className=\"inline-block scrolled mx-3\" >\n                <div key={c.id} className=\"my-4 mx-auto w-80\n                  flex items-center justify-center flex-col\n                  overflow-hidden shadow-lg rounded-lg cursor-pointer hover:opacity-85 relative\n                  \">\n                    {c.finishcount > 0 &&\n                      <div className=\"absolute flex text-red-700 top-3 right-2 items-center border-4 p-2 rounded-xl border-red-700\" >\n                        <svg className=\"w-9 h-9\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path fill-rule=\"evenodd\" d=\"M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z\" clip-rule=\"evenodd\"></path>\n                        </svg>\n                        <p className=\"text-lg font-semibold\">\n                          Finished!\n                        </p>\n                      </div>\n\n                    }\n\n                    <img src={c.bookimage} alt=\"NOImage\" className=\" h-96 w-80 object-scale-down md:object-cover object-center\"/>\n\n                    {/* ここからボタンのとこ */}\n                    <div onClick={() => onClickThoughtCreate(c)}//onClick={onOpen} //切り離せたか、テスト！！！！\n                     className=\"object-cover rounded-full bg-indigo-600 h-10 w-10 hover:opacity-80 absolute top-80 right-20\">\n                    <svg className=\"text-white object-cover p-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path></svg>\n\n                    </div>\n                    <div onClick={() => onClickFinished(c)}\n                     className=\"object-cover rounded-full bg-red-700 h-10 w-10 hover:opacity-80 absolute top-80 right-5\">\n                    {/* <svg className=\"text-white object-cover p-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path></svg> */}\n                    <svg className=\"text-white object-cover p-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path></svg>\n\n                    </div>\n                    {/* <p className=\"break-normal text-gray-800 dark:text-white text-sm font-medium mb-2\">\n                      {c.booktitle}\n                    </p> */}\n\n                    <div className=\"bg-white dark:bg-gray-800 w-full p-4 text-left\">\n                      <div className=\"flex justify-end\">\n                        {/* <p className=\"text-indigo-500 text-md font-medium\">\n                            BookTitle\n                        </p> */}\n                        <p className=\"text-gray-400 dark:text-gray-300 font-light text-md\">\n                        { c.finishcount === 0 && <span>未読！！！</span> }\n                        { c.finishcount !== 0 && <span className=\"text-red-700\"> 読破！！！</span> }\n                        {/* { c.finishcount !== 0 && <span className=\"text-red-700\">{c.finishcount}回 読破！！！</span> } */}\n                        </p>\n\n                      </div>\n                    {/* <div className=\"h-32 relative p-2\">\n\n                    <p className=\"text-gray-800 dark:text-white text-base font-medium mb-2\">\n                    { c.booktitle }\n                    </p>\n                    <p className=\"text-gray-400 dark:text-gray-300 font-light text-md\">\n                    { c.author }\n                    </p>\n\n\n                    </div> */}\n                        <div className=\" relative\">\n                        <Accordion defaultIndex={[1]} allowMultiple>\n                        <AccordionItem>\n                        <AccordionButton>\n                        <Box flex=\"1\" textAlign=\"left\">\n                        <p className=\"text-indigo-500 text-md font-medium\">\n                            BookTitle\n                        </p>\n                        </Box>\n                        <AccordionIcon />\n\n                        </AccordionButton>\n                        <AccordionPanel pb={2}>\n                        <p className=\"text-gray-800 dark:text-white text-base font-medium mb-2\">\n                          { c.booktitle }\n                          </p>\n                          <p className=\"text-gray-400 dark:text-gray-300 font-light text-md\">\n                          { c.author }\n                          </p>\n                        </AccordionPanel>\n\n                        </AccordionItem>\n                        <AccordionItem>\n                        <AccordionButton>\n                        <Box flex=\"1\" textAlign=\"left\">\n                    <p className=\"text-indigo-500 text-md font-medium\">\n                            Details\n                        </p>\n                        </Box>\n                        <AccordionIcon />\n\n                        </AccordionButton>\n                        <AccordionPanel pb={2}>\n                      {/* ようはここをfinishesテーブル叩いて持ってくる... */}\n                      {/* どうやって紐づいているのを感知できるかというと...books_idをpropsとして渡そう！ */}\n                    {/* <p className=\"text-gray-800 dark:text-white  font-medium mb-2\">\n                     <span className=\"mr-2\">\n                      読破合計\n\n                     </span>\n                     { c.finishcount }回\n                    </p> */}\n                    <FinishDetail collerctionBookid={c.id} finishcount={c.finishcount}/>\n                    {/* <p className=\"text-gray-400 dark:text-gray-300 font-light text-md\">\n                    { c.author }\n                    </p> */}\n                    </AccordionPanel>\n                    </AccordionItem>\n                    </Accordion>\n\n                    </div>\n                </div>\n                {/* <div //onClick={() => onClickTargetItem(item)}\n                     className=\"object-cover rounded-full bg-indigo-600 h-10 w-10 hover:opacity-80 absolute top-20 right-0\">\n                    <svg className=\"text-white object-cover p-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path></svg>\n\n                    </div> */}\n                </div>\n              </div>\n            )\n          })}\n          </div>\n        </>\n      }\n      {/* 今から修正するよ！！！！！！！！！！！！！！！\n          切り離せたーーーーーーーーー！！！！！！！！！！\n          これから、入力用モーダル作る！！！\n      */}\n      <CountupItem finishId={finishId}\n      // isOk={countIsOk}\n      // SetCountIsOk={()=>SetCountIsOk}\n      />\n      <CreateThoughtsModal collection={createCollection}/>\n{/*\n      <>\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogOverlay />\n\n        <AlertDialogContent>\n          <AlertDialogHeader>TEST IS OK??????</AlertDialogHeader>\n          <AlertDialogCloseButton />\n          <AlertDialogBody>\n            you want to finish up?\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              No\n            </Button>\n            <Button colorScheme=\"red\" ml={3}\n            // onClick={() => onClickFinishCountUp(finishId)}\n            >\n              Yes\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n      </> */}\n      <TopButton />\n    </div>\n  )\n})\n\nexport default Collection\n","import React, { useContext, useEffect } from 'react'\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom'\nimport styled from 'styled-components';\n\nimport { Footer } from '../components/Footer';\nimport { Search } from '../components/Search';\nimport { Lonin } from '../components/Login';\nimport { Index } from '../components/Index';\nimport { MainContext } from '../providers/Provider';\nimport axios from 'axios';\nimport Collection from '../components/Collection';\n\nexport const Router = () => {\n    const { configAxios,loginFlag, setLoginFlag, railsUrl, setUserId } = useContext(MainContext);\n\n  useEffect(() => {\n    axios.get(`${railsUrl}/restricted`,configAxios).then((res) => {\n      // setUserId(res.data.user_id);\n      setUserId(res.data);\n      console.log(res.data)\n      setLoginFlag(() => true)\n  })\n  .catch(error => {\n    // console.error(error);\n    setLoginFlag(() => false)\n    });\n  },[loginFlag])\n\n\n  return(\n    // { () ? () : ()}\n    <Switch>\n        <Route exact path=\"/\">\n\n          <SContainer>\n          <Search />\n          </SContainer>\n          {/* <Footer /> */}\n\n        </Route>\n        <Route path=\"/login\">\n          <Lonin />\n          {/* <Footer /> */}\n        </Route>\n        <Route path=\"/index\">\n          <Index />\n          <Footer />\n        </Route>\n        <Route path=\"/collection\">\n          <Collection />\n          {/* <Footer /> */}\n        </Route>\n      </Switch>\n  )\n}\n\n\nconst SContainer = styled.div`\n  min-height: 100vh;\n  /* padding: 10px; */\n`\n","import logo from './logo.svg';\nimport React, { useContext } from 'react'\n\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport styled from 'styled-components';\n\nimport { Header } from './components/Header';\n\nimport { MainProvider, MainContext } from './providers/Provider';\n\nimport { Router } from './router/Router';\n\nfunction App() {\n  // const { configAxios, setLoginFlag } = useContext(MainContext);\n  // (()=>{\n  //   axios.get('http://localhost:3000/books',configAxios).then((res) => {\n  //     // setLoginFlag(() => true)\n  //     console.log(res);\n  //   })\n  //   .catch(error => {\n  //     console.error(error);\n  //   });\n  // })()\n  // ああああああ プロバイダーのデータとかとってこれないのかあああああああ！！！\n  return (\n    <div >\n\n    <MainProvider>\n    <BrowserRouter>\n      <Header />\n      <Router />\n    </BrowserRouter>\n    </MainProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}